<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>nginx配置</title>
      <link href="/2022/01/05/nginx-conf/"/>
      <url>/2022/01/05/nginx-conf/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx-介绍"><a href="#Nginx-介绍" class="headerlink" title="Nginx 介绍"></a>Nginx 介绍</h2><p>传统的 Web 服务器，每个客户端连接作为一个单独的进程或线程处理，需在切换任务时将 CPU 切换到新的任务并创建一个新的运行时上下文，消耗额外的内存和 CPU 时间，当并发请求增加时，服务器响应变慢，从而对性能产生负面影响。<br>Nginx 是开源、高性能、高可靠的 Web 和反向代理服务器，而且支持热部署，几乎可以做到 7 * 24 小时不间断运行，即使运行几个月也不需要重新启动，还能在不间断服务的情况下对软件版本进行热更新。性能是 Nginx 最重要的考量，其占用内存少、并发能力强、能支持高达 5w 个并发连接数，最重要的是，Nginx 是免费的并可以商业化，配置使用也比较简单。</p><p>Nginx 的最重要的几个使用场景:</p><ol><li>静态资源服务，通过本地文件系统提供服务;</li><li>反向代理服务，延伸出包括缓存、负载均衡等;</li><li>API 服务，OpenResty;</li></ol><p>对于前端来说 Node.js 不陌生了，Nginx 和 Node.js 的很多理念类似，HTTP 服务器、事件驱动、异步非阻塞等，且 Nginx 的大部分功能使用 Node.js 也可以实现，但 Nginx 和 Node.js 并不冲突，都有自己擅长的领域。Nginx 擅长于底层服务器端资源的处理（静态资源处理转发、反向代理，负载均衡等），Node.js 更擅长上层具体业务逻辑的处理，两者可以完美组合，共同助力前端开发。</p><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><h3 id="简单请求和非简单请求"><a href="#简单请求和非简单请求" class="headerlink" title="简单请求和非简单请求"></a>简单请求和非简单请求</h3><p>首先我们来了解一下简单请求和非简单请求，如果同时满足下面两个条件，就属于简单请求:</p><ol><li>请求方法是 HEAD、GET、POST 三种之一；</li><li>HTTP 头信息不超过右边着几个字段：Accept、Accept-Language、Content-Language、Last-Event-IDContent-Type 只限于三个值 application/x-www-form-urlencoded、multipart/form-data、text/plain;</li></ol><p>凡是不同时满足这两个条件的，都属于非简单请求。</p><p>浏览器处理简单请求和非简单请求的方式不一样：</p><h4 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h4><p>对于简单请求，浏览器会在头信息中增加 Origin 字段后直接发出，Origin 字段用来说明，本次请求来自的哪个源（协议+域名+端口）。<br>如果服务器发现 Origin 指定的源不在许可范围内，服务器会返回一个正常的 HTTP 回应，浏览器取到回应之后发现回应的头信息中没有包含 Access-Control-Allow-Origin 字段，就抛出一个错误给 XHR 的 error 事件；<br>如果服务器发现 Origin 指定的域名在许可范围内，服务器返回的响应会多出几个 Access-Control- 开头的头信息字段。</p><h4 id="非简单请求"><a href="#非简单请求" class="headerlink" title="非简单请求"></a>非简单请求</h4><p>非简单请求是那种对服务器有特殊要求的请求，比如请求方法是 PUT 或 DELETE，或 Content-Type 值为 application/json。浏览器会在正式通信之前，发送一次 HTTP 预检 OPTIONS 请求，先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些 HTTP 请求方法和头信息字段。只有得到肯定答复，浏览器才会发出正式的 XHR 请求，否则报错。</p><h3 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h3><p>在浏览器上当前访问的网站向另一个网站发送请求获取数据的过程就是跨域请求。<br>跨域是浏览器的同源策略决定的，是一个重要的浏览器安全策略，用于限制一个 origin 的文档或者它加载的脚本与另一个源的资源进行交互，它能够帮助阻隔恶意文档，减少可能被攻击的媒介，可以使用 CORS 配置解除这个限制。如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 同源的例子</span><br><span class="line">http://example.com/app1/index.html  # 只是路径不同</span><br><span class="line">http://example.com/app2/index.html</span><br><span class="line"></span><br><span class="line">http://Example.com:80  # 只是大小写差异</span><br><span class="line">http://example.com</span><br><span class="line"></span><br><span class="line"># 不同源的例子</span><br><span class="line">http://example.com/app1   # 协议不同</span><br><span class="line">https://example.com/app2</span><br><span class="line"></span><br><span class="line">http://example.com        # host 不同</span><br><span class="line">http://www.example.com</span><br><span class="line">http://myapp.example.com</span><br><span class="line"></span><br><span class="line">http://example.com        # 端口不同</span><br><span class="line">http://example.com:8080</span><br></pre></td></tr></table></figure><h3 id="正向代理和反向代理"><a href="#正向代理和反向代理" class="headerlink" title="正向代理和反向代理"></a>正向代理和反向代理</h3><p>反向代理（Reverse Proxy）对应的是正向代理（Forward Proxy），他们的区别：</p><ol><li>正向代理： 一般的访问流程是客户端直接向目标服务器发送请求并获取内容，使用正向代理后，客户端改为向代理服务器发送请求，并指定目标服务器（原始服务器），然后由代理服务器和原始服务器通信，转交请求并获得的内容，再返回给客户端。正向代理隐藏了真实的客户端，为客户端收发请求，使真实客户端对服务器不可见；<br>举个具体的例子，你的浏览器无法直接访问谷哥，这时候可以通过一个代理服务器来帮助你访问谷哥，那么这个服务器就叫正向代理。</li><li>反向代理： 与一般访问流程相比，使用反向代理后，直接收到请求的服务器是代理服务器，然后将请求转发给内部网络上真正进行处理的服务器，得到的结果返回给客户端。反向代理隐藏了真实的服务器，为服务器收发请求，使真实服务器对客户端不可见。一般在处理跨域请求的时候比较常用。现在基本上所有的大型网站都设置了反向代理。<br>举个具体的例子，去饭店吃饭，可以点川菜、粤菜、江浙菜，饭店也分别有三个菜系的厨师，但是你作为顾客不用管哪个厨师给你做的菜，只用点菜即可，小二将你菜单中的菜分配给不同的厨师来具体处理，那么这个小二就是反向代理服务器。简单的说，一般给客户端做代理的都是正向代理，给服务器做代理的就是反向代理。</li></ol><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>一般情况下，客户端发送多个请求到服务器，服务器处理请求，其中一部分可能要操作一些资源比如数据库、静态资源等，服务器处理完毕后，再将结果返回给客户端。<br>这种模式对于早期的系统来说，功能要求不复杂，且并发请求相对较少的情况下还能胜任，成本也低。随着信息数量不断增长，访问量和数据量飞速增长，以及系统业务复杂度持续增加，这种做法已无法满足要求，并发量特别大时，服务器容易崩。<br>很明显这是由于服务器性能的瓶颈造成的问题，除了堆机器之外，最重要的做法就是负载均衡。<br>请求爆发式增长的情况下，单个机器性能再强劲也无法满足要求了，这个时候集群的概念产生了，单个服务器解决不了的问题，可以使用多个服务器，然后将请求分发到各个服务器上，将负载分发到不同的服务器，这就是负载均衡，核心是「分摊压力」。Nginx 实现负载均衡，一般来说指的是将请求转发给服务器集群。<br>举个具体的例子 ，晚高峰乘坐地铁的时候，入站口经常会有地铁工作人员大喇叭“请走 B 口，B 口人少车空….”，这个工作人员的作用就是负载均衡。</p><h3 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h3><p>为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度，降低原来单个服务器的压力。</p><h2 id="Nginx-快速安装"><a href="#Nginx-快速安装" class="headerlink" title="Nginx 快速安装"></a>Nginx 快速安装</h2><blockquote><p>yum list | grep nginx</p></blockquote><blockquote><p>yum install nginx</p></blockquote><h2 id="Nginx-操作常用命令"><a href="#Nginx-操作常用命令" class="headerlink" title="Nginx 操作常用命令"></a>Nginx 操作常用命令</h2><p>Nginx 的命令在控制台中输入 nginx -h 就可以看到完整的命令，这里列举几个常用的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload  # 向主进程发送信号，重新加载配置文件，热重启</span><br><span class="line">nginx -s reopen # 重启 Nginx</span><br><span class="line">nginx -s stop    # 快速关闭</span><br><span class="line">nginx -s quit    # 等待工作进程处理完成后关闭</span><br><span class="line">nginx -T         # 查看当前 Nginx 最终的配置</span><br><span class="line">nginx -t -c &lt;配置路径&gt;    # 检查配置是否有问题，如果已经在配置目录，则不需要-c</span><br></pre></td></tr></table></figure><p>systemctl 是 Linux 系统应用管理工具 systemd 的主命令，用于管理系统，我们也可以用它来对 Nginx 进行管理，相关命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx    # 启动 Nginx</span><br><span class="line">systemctl stop nginx     # 停止 Nginx</span><br><span class="line">systemctl restart nginx  # 重启 Nginx</span><br><span class="line">systemctl reload nginx   # 重新加载 Nginx，用于修改配置后</span><br><span class="line">systemctl enable nginx   # 设置开机启动 Nginx</span><br><span class="line">systemctl disable nginx  # 关闭开机启动 Nginx</span><br><span class="line">systemctl status nginx   # 查看 Nginx 运行状态</span><br></pre></td></tr></table></figure><p>window 下 Nginx 相关命令如下：<br>Windows 下 Nginx 的启动、停止等命令在 Windows 下使用 Nginx，我们需要掌握一些基本的操作命令，比如：启动、停止 Nginx 服务，重新载入 Nginx 等，下面我就进行一些简单的介绍。</p><ol><li>启动：C:\server\nginx-1.0.2&gt;start nginx 或 C:\server\nginx-1.0.2&gt;nginx.exe</li><li>停止：C:\server\nginx-1.0.2&gt;nginx.exe -s stop 或 C:\server\nginx-1.0.2&gt;nginx.exe -s quit 注：stop 是快速停止 nginx，可能并不保存相关信息；quit 是完整有序的停止 nginx，并保存相关信息。</li><li>重新载入 Nginx：C:\server\nginx-1.0.2&gt;nginx.exe -s reload 当配置信息修改，需要重新载入这些配置时使用此命令。</li><li>重新打开日志文件：C:\server\nginx-1.0.2&gt;nginx.exe -s reopen</li><li>查看 Nginx 版本：C:\server\nginx-1.0.2&gt;nginx -v</li></ol><h2 id="Nginx-配置语法"><a href="#Nginx-配置语法" class="headerlink" title="Nginx 配置语法"></a>Nginx 配置语法</h2><p>就跟前面文件作用讲解的图所示，Nginx 的主配置文件是 /etc/nginx/nginx.conf，你可以使用 cat -n nginx.conf 来查看配置。<br>nginx.conf 结构图可以这样概括：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">main        # 全局配置，对全局生效</span><br><span class="line">├── events  # 配置影响 Nginx 服务器或与用户的网络连接</span><br><span class="line">├── http    # 配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置</span><br><span class="line">│   ├── upstream # 配置后端服务器具体地址，负载均衡配置不可或缺的部分</span><br><span class="line">│   ├── server   # 配置虚拟主机的相关参数，一个 http 块中可以有多个 server 块</span><br><span class="line">│   ├── server</span><br><span class="line">│   │   ├── location  # server 块可以包含多个 location 块，location 指令用于匹配 uri</span><br><span class="line">│   │   ├── location</span><br><span class="line">│   │   └── ...</span><br><span class="line">│   └── ...</span><br><span class="line">└── ...</span><br></pre></td></tr></table></figure><p>一个 Nginx 配置文件的结构就像 nginx.conf 显示的那样，配置文件的语法规则：<br>配置文件由指令与指令块构成；每条指令以 ;分号结尾，指令与参数间以空格符号分隔；指令块以 {} 大括号将多条指令组织在一起；include 语句允许组合多个配置文件以提升可维护性；使用 #符号添加注释，提高可读性；使用 $ 符号使用变量；部分指令的参数支持正则表达式；</p><h2 id="典型配置"><a href="#典型配置" class="headerlink" title="典型配置"></a>典型配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br></pre></td><td class="code"><pre><span class="line">#user  nobody;   # 运行用户，默认即是nginx，可以不进行设置</span><br><span class="line">worker_processes  1;  # Nginx 进程数，一般设置为和 CPU 核数一样</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;    # Nginx 的错误日志存放目录</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;  # Nginx 服务启动时的 pid 存放位置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    # use epoll;  使用epoll的I/O模型(如果你不知道Nginx该使用哪种轮询方法，会自动选择一个最适合你操作系统的)</span><br><span class="line">    worker_connections  1024; # 每个进程允许最大并发数</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;  # 配置使用最频繁的部分，代理、缓存、日志定义等绝大多数功能和第三方模块的配置都在这里设置</span><br><span class="line">    include       mime.types;  # 文件扩展名与类型映射表</span><br><span class="line">    default_type  application/octet-stream;   # 默认文件类型</span><br><span class="line">    # 设置日志模式</span><br><span class="line">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main; # Nginx访问日志存放位置</span><br><span class="line"></span><br><span class="line">    sendfile        on;   # 开启高效传输模式</span><br><span class="line">    #tcp_nopush     on;  # 减少网络报文段的数量</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65; # 保持连接的时间，也叫超时时间，单位秒</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line">    gzip  on;</span><br><span class="line">    gzip_min_length  1k;</span><br><span class="line">    gzip_buffers     4 16k;</span><br><span class="line">    gzip_http_version 1.1;</span><br><span class="line">    gzip_comp_level 9;</span><br><span class="line">    gzip_types       text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/javascript application/json;</span><br><span class="line">    gzip_disable &quot;MSIE [1-6]\.&quot;;</span><br><span class="line">    gzip_vary on;</span><br><span class="line"></span><br><span class="line">    #必须添加的</span><br><span class="line">    map $http_upgrade $connection_upgrade &#123;</span><br><span class="line">        default upgrade;</span><br><span class="line">        &#x27;&#x27; close;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;  # 配置监听的端口</span><br><span class="line">        server_name  localhost;  # 配置的域名</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;  # 网站根目录</span><br><span class="line">            index  index.html index.htm;  # 默认首页文件</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class="line">        # concurs with nginx&#x27;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       1000;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">            root  D:/Nginx/nginx-1.18.0/html/build;</span><br><span class="line">    index  index.html index.htm;</span><br><span class="line">            try_files $uri $uri/ /index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        # location / &#123;</span><br><span class="line">        #     root  D:/Nginx/nginx-1.18.0/html/dist;</span><br><span class="line">        #     try_files $uri $uri/ /index.html;</span><br><span class="line">        # &#125;</span><br><span class="line"></span><br><span class="line">        # location / &#123;</span><br><span class="line">        #     proxy_pass http://xxx/;</span><br><span class="line">        #     proxy_set_header Host $host;</span><br><span class="line">        #     proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        #     proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        #     proxy_redirect off;</span><br><span class="line">        # &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        # location ~ .*\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$ &#123;</span><br><span class="line">            # expires      7d;</span><br><span class="line">            # add_header Cache-Control no-store;</span><br><span class="line">            # add_header Cache-Control max-age=3600;</span><br><span class="line">            # add_header Cache-Control public;</span><br><span class="line">            # add_header Cache-Control only-if-cached;</span><br><span class="line">            # add_header Cache-Control no-cache;</span><br><span class="line">            # add_header Cache-Control must-revalidate;</span><br><span class="line">        # &#125;</span><br><span class="line"></span><br><span class="line">        # location ~ .*\.(?:js|css)$ &#123;</span><br><span class="line">        #     expires      7d;</span><br><span class="line">        # &#125;</span><br><span class="line"></span><br><span class="line">        # location ~ .*\.(?:htm|html)$ &#123;</span><br><span class="line">        #     add_header Cache-Control &quot;private&quot;;</span><br><span class="line">        # &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       9523;</span><br><span class="line">        server_name  0.0.0.0;</span><br><span class="line">#sslon;</span><br><span class="line"></span><br><span class="line">#ssl_certificate      F:/ept-prod-jar/ssl/network.crt;</span><br><span class="line">#ssl_certificate_key  F:/ept-prod-jar/ssl/network.key;</span><br><span class="line"></span><br><span class="line">#ssl_session_cache    shared:SSL:1m;</span><br><span class="line">#ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">#ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">#ssl_prefer_server_ciphers  on;</span><br><span class="line">#add_header Access-Control-Allow-Origin *;</span><br><span class="line">        #add_header Access-Control-Allow-Methods &#x27;GET, POST, OPTIONS&#x27;;</span><br><span class="line">        #add_header Access-Control-Allow-Headers &#x27;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&#x27;;</span><br><span class="line">        #if ($request_method = &#x27;OPTIONS&#x27;) &#123;</span><br><span class="line">        #    return 204;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location = /index.html &#123;</span><br><span class="line">            root   D:/Nginx/nginx-1.18.0/html/dist;</span><br><span class="line">            index  index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location = / &#123;</span><br><span class="line">            root   D:/Nginx/nginx-1.18.0/html/dist;</span><br><span class="line">            index  index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /static/ &#123;</span><br><span class="line">            root   D:/Nginx/nginx-1.18.0/html/dist;</span><br><span class="line">add_header Content-Security-Policy &quot;default-src &#x27;self&#x27;;&quot;;</span><br><span class="line">            add_header X-Content-Type-Options nosniff;</span><br><span class="line">            add_header X-XSS-Protection 1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /js/ &#123;</span><br><span class="line">            root   D:/Nginx/nginx-1.18.0/html/dist;</span><br><span class="line">add_header Content-Security-Policy &quot;default-src &#x27;self&#x27;;&quot;;</span><br><span class="line">            add_header X-Content-Type-Options nosniff;</span><br><span class="line">            add_header X-XSS-Protection 1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"># 添加error_page部分，安全相关</span><br><span class="line">        error_page 403 =404 /404.html; # =后不能有空格</span><br><span class="line"></span><br><span class="line">location = /404.html &#123;</span><br><span class="line">    internal; #return 404</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        # location /token &#123;</span><br><span class="line">        #     proxy_pass http://xxx/token;</span><br><span class="line">        #     proxy_set_header Host $host;</span><br><span class="line">        #     proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        #     proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        #     proxy_redirect off;</span><br><span class="line">        # &#125;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass https://xxx/;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">            proxy_redirect off;</span><br><span class="line">            # try_files $uri $uri/ /index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"># location /socketNotify/ &#123;</span><br><span class="line">        #     proxy_pass http://xxx/;</span><br><span class="line">        #     proxy_set_header Host $host;</span><br><span class="line">        #     proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        #     proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        #     proxy_http_version 1.1;</span><br><span class="line">        #     proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        #     proxy_set_header Connection $connection_upgrade;</span><br><span class="line"># proxy_read_timeout 1800s;</span><br><span class="line">        # &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       443 ssl;</span><br><span class="line">    #    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #    ssl_certificate      cert.pem;</span><br><span class="line">    #    ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">    #    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    #    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    #    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>server 块可以包含多个 location 块，location 指令用于匹配 uri，语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location [ = | ~ | ~* | ^~] uri &#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>指令后面：</p><p><code>=</code> 精确匹配路径，用于不含正则表达式的 uri 前，如果匹配成功，不再进行后续的查找；<code>^~</code> 用于不含正则表达式的 uri 前，表示如果该符号后面的字符是最佳匹配，采用该规则，不再进行后续的查找；<code>~</code>表示用该符号后面的正则去匹配路径，区分大小写； <code>~*</code>表示用该符号后面的正则去匹配路径，不区分大小写。跟<code>~</code> 优先级都比较低，如有多个 location 的正则能匹配的话，则使用正则表达式最长的那个；如果 uri 包含正则表达式，则必须要有 <code>~</code> 或 <code>~*</code> 标志。</p><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><p>Nginx 有一些常用的全局变量，你可以在配置的任何位置使用它们。</p><p><strong>全局变量名功能</strong>$host请求信息中的Host，如果请求中没有Host行，则等于设置的服务器名，不包含端口$request_method 客户端请求类型，如 GET、POST$remote_addr客户端的IP地址$args 请求中的参数$arg_PARAMETERGET请求中变量名 PARAMETER 参数的值，例如：$http_user_agent(Uaer-Agent 值),$http_referer…$content_length 请求头中的 Content-length 字段$http_user_agent客户端agent信息$http_cookie 客户端 cookie 信息$remote_addr客户端的IP地址$remote_port 客户端的端口$http_user_agent客户端agent信息$server_protocol 请求使用的协议，如 HTTP/1.0、HTTP/1.1$server_addr服务器地址$server_name 服务器名称$server_port服务器的端口号$schemeHTTP 方法（如 http，https）还有更多的内置预定义变量，可以直接搜索关键字「nginx 内置预定义变量」可以看到一堆博客写这个，这些变量都可以在配置文件中直接使用。</p><h2 id="设置二级域名虚拟主机"><a href="#设置二级域名虚拟主机" class="headerlink" title="设置二级域名虚拟主机"></a>设置二级域名虚拟主机</h2><p>在某某云 ☁️ 上购买了域名之后，就可以配置虚拟主机了，一般配置的路径在 域名管理 -&gt; 解析 -&gt; 添加记录 中添加二级域名，配置后某某云会把二级域名也解析到我们配置的服务器 IP 上，然后我们在 Nginx 上配置一下虚拟主机的访问监听，就可以拿到从这个二级域名过来的请求了</p><p>现在我自己的服务器上配置了一个 fe 的二级域名，也就是说在外网访问 fe.sherlocked93.club 的时候，也可以访问到我们的服务器了。<br>由于默认配置文件 /etc/nginx/nginx.conf 的 http 模块中有一句 include /etc/nginx/conf.d/_.conf 也就是说 conf.d 文件夹下的所有 _.conf 文件都会作为子配置项被引入配置文件中。为了维护方便，我在 /etc/nginx/conf.d 文件夹中新建一个 fe.sherlocked93.club.conf：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># /etc/nginx/conf.d/fe.sherlocked93.club.conf</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">server_name fe.sherlocked93.club;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">root  D:/Nginx/nginx-1.18.0/html/fe;</span><br><span class="line">index index.html;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在 D:/Nginx/nginx-1.18.0/html 文件夹下新建 fe 文件夹，新建文件 index.html，内容随便写点，改完 nginx -s reload 重新加载，浏览器中输入 fe.sherlocked93.club，发现从二级域名就可以访问到我们刚刚新建的 fe 文件夹：</p><h2 id="配置反向代理"><a href="#配置反向代理" class="headerlink" title="配置反向代理"></a>配置反向代理</h2><p>反向代理是工作中最常用的服务器功能，经常被用来解决跨域问题，下面简单介绍一下如何实现反向代理。<br>首先进入 Nginx 的主配置文件：</p><blockquote><p>vim /etc/nginx/nginx.conf</p></blockquote><p>去 http 模块的 server 块中的 location /，增加一行将默认网址重定向到最大学习网站 Bilibili 的 proxy_pass 配置 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       8000;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http://www.bilibili.com;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>改完保存退出，nginx -s reload 重新加载，进入默认网址，那么现在就直接跳转到 B 站了，实现了一个简单的代理。<br>实际使用中，可以将请求转发到本机另一个服务器上，也可以根据访问的路径跳转到不同端口的服务中。<br>比如我们监听 9001 端口，然后把访问不同路径的请求进行反向代理：</p><p>把访问 <a href="http://127.0.0.1:9001/edu">http://127.0.0.1:9001/edu</a> 的请求转发到 <a href="http://127.0.0.1:8080把访问http://127.0.0.1:9001/vod">http://127.0.0.1:8080把访问http://127.0.0.1:9001/vod</a> 的请求转发到 <a href="http://127.0.0.1:8081/">http://127.0.0.1:8081</a><br>这种要怎么配置呢，首先同样打开主配置文件，然后在 http 模块下增加一个 server 块：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 9001;</span><br><span class="line">  server_name *.sherlocked93.club;</span><br><span class="line"></span><br><span class="line">  location ~ /edu/ &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8080;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location ~ /vod/ &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8081;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反向代理还有一些其他的指令，可以了解一下：</p><ol><li>proxy_set_header 在将客户端请求发送给后端服务器之前，更改来自客户端的请求头信息；</li><li>proxy_connect_timeout 配置 Nginx 与后端代理服务器尝试建立连接的超时时间；</li><li>proxy_read_timeout 配置 Nginx 向后端服务器组发出 read 请求后，等待相应的超时时间；</li><li>proxy_send_timeout 配置 Nginx 向后端服务器组发出 write 请求后，等待相应的超时时间；</li><li>proxy_redirect 用于修改后端服务器返回的响应头中的 Location 和 Refresh。</li></ol><h2 id="跨域-CORS-配置"><a href="#跨域-CORS-配置" class="headerlink" title="跨域 CORS 配置"></a>跨域 CORS 配置</h2><p>关于简单请求、非简单请求、跨域的概念，前面已经介绍过了，还不了解的可以看看前面的讲解。现在前后端分离的项目一统天下，经常本地起了前端服务，需要访问不同的后端地址，不可避免遇到跨域问题。</p><p>要解决跨域问题，我们来制造一个跨域问题。首先和前面设置二级域名的方式一样，先设置好 fe.sherlocked93.club 和 be.sherlocked93.club 二级域名，都指向本云服务器地址，虽然对应 IP 是一样的，但是在 fe.sherlocked93.club 域名发出的请求访问 be.sherlocked93.club 域名的请求还是跨域了，因为访问的 host 不一致（如果不知道啥原因参见前面跨域的内容）。</p><h3 id="使用反向代理解决跨域"><a href="#使用反向代理解决跨域" class="headerlink" title="使用反向代理解决跨域"></a>使用反向代理解决跨域</h3><p>在前端服务地址为 fe.sherlocked93.club 的页面请求 be.sherlocked93.club 的后端服务导致的跨域，可以这样配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 9001;</span><br><span class="line">  server_name fe.sherlocked93.club;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass be.sherlocked93.club;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样就将对前一个域名 fe.sherlocked93.club 的请求全都代理到了 be.sherlocked93.club，前端的请求都被我们用服务器代理到了后端地址下，绕过了跨域。<br>这里对静态文件的请求和后端服务的请求都以 fe.sherlocked93.club 开始，不易区分，所以为了实现对后端服务请求的统一转发，通常我们会约定对后端服务的请求加上 /apis/ 前缀或者其他的 path 来和对静态资源的请求加以区分，此时我们可以这样配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 请求跨域，约定代理后端服务请求path以/apis/开头</span><br><span class="line">location ^~/apis/ &#123;</span><br><span class="line">    # 这里重写了请求，将正则匹配中的第一个分组的path拼接到真正的请求后面，并用break停止后续匹配</span><br><span class="line">    rewrite ^/apis/(.*)$ /$1 break;</span><br><span class="line">    proxy_pass be.sherlocked93.club;</span><br><span class="line"></span><br><span class="line">    # 两个域名之间cookie的传递与回写</span><br><span class="line">    proxy_cookie_domain be.sherlocked93.club fe.sherlocked93.club;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样，静态资源我们使用 fe.sherlocked93.club/xx.html，动态资源我们使用 fe.sherlocked93.club/apis/getAwo，浏览器页面看起来仍然访问的前端服务器，绕过了浏览器的同源策略，毕竟我们看起来并没有跨域。<br>也可以统一一点，直接把前后端服务器地址直接都转发到另一个 server.sherlocked93.club，只通过在后面添加的 path 来区分请求的是静态资源还是后端服务，看需求了</p><h3 id="配置-header-解决跨域"><a href="#配置-header-解决跨域" class="headerlink" title="配置 header 解决跨域"></a>配置 header 解决跨域</h3><p>当浏览器在访问跨源的服务器时，也可以在跨域的服务器上直接设置 Nginx，从而前端就可以无感地开发，不用把实际上访问后端的地址改成前端服务的地址，这样可适性更高。<br>比如前端站点是 fe.sherlocked93.club，这个地址下的前端页面请求 be.sherlocked93.club 下的资源，比如前者的 fe.sherlocked93.club/index.html 内容是这样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen       80;</span><br><span class="line">  server_name  be.sherlocked93.club;</span><br><span class="line"></span><br><span class="line">add_header &#x27;Access-Control-Allow-Origin&#x27; $http_origin;   # 全局变量获得当前请求origin，带cookie的请求不支持*</span><br><span class="line">add_header &#x27;Access-Control-Allow-Credentials&#x27; &#x27;true&#x27;;    # 为 true 可带上 cookie</span><br><span class="line">add_header &#x27;Access-Control-Allow-Methods&#x27; &#x27;GET, POST, OPTIONS&#x27;;  # 允许请求方法</span><br><span class="line">add_header &#x27;Access-Control-Allow-Headers&#x27; $http_access_control_request_headers;  # 允许请求的 header，可以为 *</span><br><span class="line">add_header &#x27;Access-Control-Expose-Headers&#x27; &#x27;Content-Length,Content-Range&#x27;;</span><br><span class="line"></span><br><span class="line">  if ($request_method = &#x27;OPTIONS&#x27;) &#123;</span><br><span class="line">add_header &#x27;Access-Control-Max-Age&#x27; 1728000;   # OPTIONS 请求的有效期，在有效期内不用发出另一条预检请求</span><br><span class="line">add_header &#x27;Content-Type&#x27; &#x27;text/plain; charset=utf-8&#x27;;</span><br><span class="line">add_header &#x27;Content-Length&#x27; 0;</span><br><span class="line"></span><br><span class="line">return 204;                  # 200 也可以</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">root  D:/Nginx/nginx-1.18.0/html/be;</span><br><span class="line">index index.html;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后 nginx -s reload 重新加载配置。这时再访问 fe.sherlocked93.club/index.html 结果如下，请求中出现了我们刚刚配置的 Header：<br>解决了跨域问题。</p><h2 id="开启-gzip-压缩"><a href="#开启-gzip-压缩" class="headerlink" title="开启 gzip 压缩"></a>开启 gzip 压缩</h2><p>gzip 是一种常用的网页压缩技术，传输的网页经过 gzip 压缩之后大小通常可以变为原来的一半甚至更小（官网原话），更小的网页体积也就意味着带宽的节约和传输速度的提升，特别是对于访问量巨大大型网站来说，每一个静态资源体积的减小，都会带来可观的流量与带宽的节省。</p><h3 id="Nginx-配置-gzip"><a href="#Nginx-配置-gzip" class="headerlink" title="Nginx 配置 gzip"></a>Nginx 配置 gzip</h3><p>使用 gzip 不仅需要 Nginx 配置，浏览器端也需要配合，需要在请求消息头中包含 Accept-Encoding: gzip（IE5 之后所有的浏览器都支持了，是现代浏览器的默认设置）。一般在请求 html 和 css 等静态资源的时候，支持的浏览器在 request 请求静态资源的时候，会加上 Accept-Encoding: gzip 这个 header，表示自己支持 gzip 的压缩方式，Nginx 在拿到这个请求的时候，如果有相应配置，就会返回经过 gzip 压缩过的文件给浏览器，并在 response 相应的时候加上 content-encoding: gzip 来告诉浏览器自己采用的压缩方式（因为浏览器在传给服务器的时候一般还告诉服务器自己支持好几种压缩方式），浏览器拿到压缩的文件后，根据自己的解压方式进行解析。<br>先来看看 Nginx 怎么进行 gzip 配置，和之前的配置一样，为了方便管理，还是在 /etc/nginx/conf.d/ 文件夹中新建配置文件 gzip.conf：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#gzip  on;</span><br><span class="line">    gzip  on;</span><br><span class="line">    gzip_min_length  1k;</span><br><span class="line">    gzip_buffers     4 16k;</span><br><span class="line">    gzip_http_version 1.1;</span><br><span class="line">    gzip_comp_level 9;</span><br><span class="line">    gzip_types       text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/javascript application/json;</span><br><span class="line">    gzip_disable &quot;MSIE [1-6]\.&quot;;</span><br><span class="line">    gzip_vary on;</span><br></pre></td></tr></table></figure><p>稍微解释一下：</p><ol><li>gzip_types 要采用 gzip 压缩的 MIME 文件类型，其中 text/html 被系统强制启用；</li><li>gzip_static 默认 off，该模块启用后，Nginx 首先检查是否存在请求静态文件的 gz 结尾的文件，如果有则直接返回该</li><li>gz 文件内容；</li><li>gzip_proxied 默认 off，nginx 做为反向代理时启用，用于设置启用或禁用从代理服务器上收到相应内容 gzip 压缩；</li><li>gzip_vary 用于在响应消息头中添加</li><li>Vary Accept-Encoding，使代理服务器根据请求头中的</li><li>Accept-Encoding 识别是否启用 gzip 压缩；</li><li>gzip_comp_level gzip 压缩比，压缩级别是 1-9，1 压缩级别最低，9 最高，级别越高压缩率越大，压缩时间越长，建议 4-6；</li><li>gzip_buffers 获取多少内存用于缓存压缩结果，16 8k 表示以 8k*16 为单位获得；</li><li>gzip_min_length 允许压缩的页面最小字节数，页面字节数从 header 头中的</li><li>Content-Length 中进行获取。默认值是 0，不管页面多大都压缩。建议设置成大于 1k 的字节数，小于 1k 可能会越压越大；</li><li>gzip_http_version 默认 1.1，启用 gzip 所需的 HTTP 最低版本；</li></ol><p>这个配置可以插入到 http 模块整个服务器的配置里，也可以插入到需要使用的虚拟主机的 server 或者下面的 location 模块中，当然像上面我们这样写的话就是被 include 到 http 模块中了。</p><h3 id="Webpack-的-gzip-配置"><a href="#Webpack-的-gzip-配置" class="headerlink" title="Webpack 的 gzip 配置"></a>Webpack 的 gzip 配置</h3><p>当前端项目使用 Webpack 进行打包的时候，也可以开启 gzip 压缩：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue-cli3 的 vue.config.js 文件</span></span><br><span class="line"><span class="keyword">const</span> CompressionWebpackPlugin = <span class="built_in">require</span>(<span class="string">&#x27;compression-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">// gzip 配置</span></span><br><span class="line">  <span class="attr">configureWebpack</span>: <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 生产环境</span></span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">plugins</span>: [<span class="keyword">new</span> CompressionWebpackPlugin(&#123;</span><br><span class="line">          <span class="attr">test</span>: <span class="regexp">/\.js$|\.html$|\.css/</span>,    <span class="comment">// 匹配文件名</span></span><br><span class="line">          threshold: <span class="number">10240</span>,               <span class="comment">// 文件压缩阈值，对超过10k的进行压缩</span></span><br><span class="line">          <span class="attr">deleteOriginalAssets</span>: <span class="literal">false</span>     <span class="comment">// 是否删除源文件</span></span><br><span class="line">        &#125;)]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置负载均衡"><a href="#配置负载均衡" class="headerlink" title="配置负载均衡"></a>配置负载均衡</h2><p>负载均衡在之前已经介绍了相关概念了，主要思想就是把负载均匀合理地分发到多个服务器上，实现压力分流的目的。<br>主要配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">  upstream myserver &#123;</span><br><span class="line">  # ip_hash;  # ip_hash 方式</span><br><span class="line">    # fair;   # fair 方式</span><br><span class="line">    server 127.0.0.1:8081;  # 负载均衡目的服务地址</span><br><span class="line">    server 127.0.0.1:8080;</span><br><span class="line">    server 127.0.0.1:8082 weight=10;  # weight 方式，不写默认为 1</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  server &#123;</span><br><span class="line">    location / &#123;</span><br><span class="line">    proxy_pass http://myserver;</span><br><span class="line">      proxy_connect_timeout 10;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Nginx 提供了好几种分配方式，默认为轮询，就是轮流来。有以下几种分配方式：<br>轮询，默认方式，每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务挂了，能自动剔除；</p><ol><li>weight，权重分配，指定轮询几率，权重越高，在被访问的概率越大，用于后端服务器性能不均的情况；</li><li>ip_hash，每个请求按访问 IP 的 hash 结果分配，这样每个访客固定访问一个后端服务器，可以解决动态网页 session 共享问题。负载均衡每次请求都会重新定位到服务器集群中的某一个，那么已经登录某一个服务器的用户再重新定位到另一个服务器，其登录信息将会丢失，这样显然是不妥的；</li><li>fair（第三方），按后端服务器的响应时间分配，响应时间短的优先分配，依赖第三方插件 nginx-upstream-fair，需要先安装；</li></ol><h2 id="配置动静分离"><a href="#配置动静分离" class="headerlink" title="配置动静分离"></a>配置动静分离</h2><p>动静分离在之前也介绍过了，就是把动态和静态的请求分开。方式主要有两种，一种 是纯粹把静态文件独立成单独的域名，放在独立的服务器上，也是目前主流推崇的方案。另外一种方法就是动态跟静态文件混合在一起发布， 通过 Nginx 配置来分开。<br>通过 location 指定不同的后缀名实现不同的请求转发。通过 expires 参数设置，可以使浏览器缓存过期时间，减少与服务器之前的请求和流量。具体 expires 定义：是给一个资源设定一个过期时间，也就是说无需去服务端验证，直接通过浏览器自身确认是否过期即可，所以不会产生额外的流量。此种方法非常适合不经常变动的资源。（如果经常更新的文件，不建议使用 expires 来缓存），我这里设置 3d，表示在这 3 天之内访问这个 URL，发送一个请求，比对服务器该文件最后更新时间没有变化。则不会从服务器抓取，返回状态码 304，如果有修改，则直接从服务器重新下载，返回状态码 200。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  location /www/ &#123;</span><br><span class="line">  root /data/;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location /image/ &#123;</span><br><span class="line">  root /data/;</span><br><span class="line">    autoindex on;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="适配-PC-或移动设备"><a href="#适配-PC-或移动设备" class="headerlink" title="适配 PC 或移动设备"></a>适配 PC 或移动设备</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       9000;</span><br><span class="line">server_name  localhost;</span><br><span class="line">location / &#123;</span><br><span class="line">        root  D:/Nginx/nginx-1.18.0/html/pc;</span><br><span class="line">        if ($http_user_agent ~* &#x27;(Android|webOS|iPhone|iPod|BlackBerry)&#x27;) &#123;</span><br><span class="line">            root  D:/Nginx/nginx-1.18.0/html/mobile;</span><br><span class="line">        &#125;</span><br><span class="line">index  index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置-HTTPS"><a href="#配置-HTTPS" class="headerlink" title="配置 HTTPS"></a>配置 HTTPS</h2><p>具体配置过程网上挺多的了，也可以使用你购买的某某云，一般都会有免费申请的服务器证书，安装直接看所在云的操作指南即可。<br>我购买的腾讯云提供的亚洲诚信机构颁发的免费证书只能一个域名使用，二级域名什么的需要另外申请，但是申请审批比较快，一般几分钟就能成功，然后下载证书的压缩文件，里面有个 nginx 文件夹，把 xxx.crt 和 xxx.key 文件拷贝到服务器目录，再配置下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 443 ssl http2 default_server;   # SSL 访问端口号为 443</span><br><span class="line">  server_name sherlocked93.club;         # 填写绑定证书的域名</span><br><span class="line"></span><br><span class="line">  ssl_certificate /etc/nginx/https/1_sherlocked93.club_bundle.crt;   # 证书文件地址</span><br><span class="line">  ssl_certificate_key /etc/nginx/https/2_sherlocked93.club.key;      # 私钥文件地址</span><br><span class="line">  ssl_session_timeout 10m;</span><br><span class="line"></span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;      #请按照以下协议配置</span><br><span class="line">  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">  ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    root         D:/Nginx/nginx-1.18.0/html;</span><br><span class="line">    index        index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写完 nginx -t -q 校验一下，没问题就 nginx -s reload，现在去访问 <a href="https://sherlocked93.club/">https://sherlocked93.club/</a> 就能访问 HTTPS 版的网站了。<br>一般还可以加上几个增强安全性的命令：</p><blockquote><p>add_header X-Frame-Options DENY; # 减少点击劫持</p></blockquote><blockquote><p>add_header X-Content-Type-Options nosniff; # 禁止服务器自动解析资源类型</p></blockquote><blockquote><p>add_header X-Xss-Protection 1; # 防 XSS 攻击</p></blockquote><h2 id="一些常用技巧"><a href="#一些常用技巧" class="headerlink" title="一些常用技巧"></a>一些常用技巧</h2><h3 id="静态服务"><a href="#静态服务" class="headerlink" title="静态服务"></a>静态服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen       80;</span><br><span class="line">  server_name  static.sherlocked93.club;</span><br><span class="line">  charset utf-8;    # 防止中文文件名乱码</span><br><span class="line"></span><br><span class="line">  location /download &#123;</span><br><span class="line">    alias          D:/Nginx/nginx-1.18.0/html/static;  # 静态资源目录</span><br><span class="line"></span><br><span class="line">    autoindex               on;    # 开启静态资源列目录</span><br><span class="line">    autoindex_exact_size    off;   # on(默认)显示文件的确切大小，单位是byte；off显示文件大概大小，单位KB、MB、GB</span><br><span class="line">    autoindex_localtime     off;   # off(默认)时显示的文件时间为GMT时间；on显示的文件时间为服务器时间</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图片防盗链"><a href="#图片防盗链" class="headerlink" title="图片防盗链"></a>图片防盗链</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen       80;</span><br><span class="line">  server_name  *.sherlocked93.club;</span><br><span class="line"></span><br><span class="line">  # 图片防盗链</span><br><span class="line">  location ~* \.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">    valid_referers none blocked 192.168.0.2;  # 只允许本机 IP 外链引用</span><br><span class="line">    if ($invalid_referer)&#123;</span><br><span class="line">      return 403;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="请求过滤"><a href="#请求过滤" class="headerlink" title="请求过滤"></a>请求过滤</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 非指定请求全返回 403</span><br><span class="line">if ( $request_method !~ ^(GET|POST|HEAD)$ ) &#123;</span><br><span class="line">  return 403;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">  # IP访问限制（只允许IP是 192.168.0.2 机器访问）</span><br><span class="line">  allow 192.168.0.2;</span><br><span class="line">  deny all;</span><br><span class="line"></span><br><span class="line">  root   html;</span><br><span class="line">  index  index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置图片、字体等静态文件缓存"><a href="#配置图片、字体等静态文件缓存" class="headerlink" title="配置图片、字体等静态文件缓存"></a>配置图片、字体等静态文件缓存</h3><p>由于图片、字体、音频、视频等静态文件在打包的时候通常会增加了 hash，所以缓存可以设置的长一点，先设置强制缓存，再设置协商缓存；如果存在没有 hash 值的静态文件，建议不设置强制缓存，仅通过协商缓存判断是否需要使用缓存。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 图片缓存时间设置</span><br><span class="line">location ~ .*\.(css|js|jpg|png|gif|swf|woff|woff2|eot|svg|ttf|otf|mp3|m4a|aac|txt)$ &#123;</span><br><span class="line">expires 10d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 如果不希望缓存</span><br><span class="line">expires -1;</span><br></pre></td></tr></table></figure><h3 id="单页面项目-history-路由配置"><a href="#单页面项目-history-路由配置" class="headerlink" title="单页面项目 history 路由配置"></a>单页面项目 history 路由配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen       80;</span><br><span class="line">  server_name  fe.sherlocked93.club;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    root       D:/Nginx/nginx-1.18.0/html/dist;  # vue 打包后的文件夹</span><br><span class="line">    index      index.html index.htm;</span><br><span class="line">    try_files  $uri $uri/ /index.html @rewrites;</span><br><span class="line"></span><br><span class="line">    expires -1;                          # 首页一般没有强制缓存</span><br><span class="line">    add_header Cache-Control no-cache;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  # 接口转发，如果需要的话</span><br><span class="line">  #location ~ ^/api &#123;</span><br><span class="line">  #  proxy_pass http://be.sherlocked93.club;</span><br><span class="line">  #&#125;</span><br><span class="line"></span><br><span class="line">  location @rewrites &#123;</span><br><span class="line">    rewrite ^(.+)$ /index.html break;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HTTP-请求转发到-HTTPS"><a href="#HTTP-请求转发到-HTTPS" class="headerlink" title="HTTP 请求转发到 HTTPS"></a>HTTP 请求转发到 HTTPS</h3><p>配置完 HTTPS 后，浏览器还是可以访问 HTTP 的地址 <a href="http://sherlocked93.club/">http://sherlocked93.club/</a> 的，可以做一个 301 跳转，把对应域名的 HTTP 请求重定向到 HTTPS 上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name www.sherlocked93.club;</span><br><span class="line"></span><br><span class="line">    # 单域名重定向</span><br><span class="line">    if ($host = &#x27;www.sherlocked93.club&#x27;)&#123;</span><br><span class="line">        return 301 https://www.sherlocked93.club$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line">    # 全局非 https 协议时重定向</span><br><span class="line">    if ($scheme != &#x27;https&#x27;) &#123;</span><br><span class="line">        return 301 https://$server_name$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 或者全部重定向</span><br><span class="line">    return 301 https://$server_name$request_uri;</span><br><span class="line"></span><br><span class="line">    # 以上配置选择自己需要的即可，不用全部加</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="泛域名路径分离"><a href="#泛域名路径分离" class="headerlink" title="泛域名路径分离"></a>泛域名路径分离</h3><p>这是一个非常实用的技能，经常有时候我们可能需要配置一些二级或者三级域名，希望通过 Nginx 自动指向对应目录，比如：<br>test1.doc.sherlocked93.club 自动指向 D:/Nginx/nginx-1.18.0/html/doc/test1 服务器地址；test2.doc.sherlocked93.club 自动指向 D:/Nginx/nginx-1.18.0/html/doc/test2 服务器地址；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  ~^([\w-]+)\.doc\.sherlocked93\.club$;</span><br><span class="line"></span><br><span class="line">    root D:/Nginx/nginx-1.18.0/html/doc/$1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="泛域名转发"><a href="#泛域名转发" class="headerlink" title="泛域名转发"></a>泛域名转发</h3><p>和之前的功能类似，有时候我们希望把二级或者三级域名链接重写到我们希望的路径，让后端就可以根据路由解析不同的规则：<br>test1.serv.sherlocked93.club/api?name=a 自动转发到 127.0.0.1:8080/test1/api?name=a；test2.serv.sherlocked93.club/api?name=a 自动转发到 127.0.0.1:8080/test2/api?name=a；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name ~^([\w-]+)\.serv\.sherlocked93\.club$;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_set_header        X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header        Host $http_host;</span><br><span class="line">        proxy_set_header        X-NginX-Proxy true;</span><br><span class="line">        proxy_pass              http://127.0.0.1:8080/$1$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>参考文档：</p></blockquote><ul><li>Nginx 中文文档</li><li>Nginx 安装，目录结构与配置文件详解</li><li>Keepalived 安装与配置</li><li>Keepalived+Nginx 实现高可用</li><li>Nginx 与前端开发</li><li>跨域资源共享 CORS 详解 - 阮一峰的网络日志</li><li>前端开发者必备的 nginx 知识</li><li>我也说说 Nginx 解决前端跨域问题，正确的 Nginx 跨域配置</li><li>vue-router history 模式 nginx 配置并配置静态资源缓存 | HolidayPenguin</li><li>nginx 重定向，全局 https，SSL 配置，反代配置参考</li><li>Nginx 入门教程</li></ul>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>axios阻止重复请求</title>
      <link href="/2022/01/05/axios-cancelToken/"/>
      <url>/2022/01/05/axios-cancelToken/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在实际项目中，我们可能需要对请求进行“防抖”处理。这里主要是为了阻止用户在某些情况下短时间内重复点击某个按钮，导致前端向后端重复发送多次请求。这里我列举两种比较常见的实际情况：</p><ol><li>PC 端 - 用户双击搜索按钮，可能会触发两次搜索请求</li><li>移动端 - 因移动端没有点击延迟，所以极易造成误操作或多操作，造成请求重发</li></ol><h2 id="核心——CancelToken"><a href="#核心——CancelToken" class="headerlink" title="核心——CancelToken"></a>核心——CancelToken</h2><p>在 Axios 中取消请求最核心的方法是 CanelToken</p><blockquote><p>注意设置是全局请求拦截,所以当有些请求让它重复请求的话 设置白名单</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 拦截请求白名单</span></span><br><span class="line"><span class="keyword">let</span> whiteListUrls = [</span><br><span class="line">  <span class="string">&quot;/sysUser/checkRepeat&quot;</span>,</span><br><span class="line">  ...</span><br><span class="line">];</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 正在进行中的请求列表</span></span><br><span class="line"><span class="keyword">let</span> reqList: any[] = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 阻止重复请求</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;array&#125;</span> <span class="variable">reqList</span></span> - 请求缓存列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">url</span></span> - 当前请求地址</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;function&#125;</span> <span class="variable">cancel</span></span> - 请求中断函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">errorMessage</span></span> - 请求中断时需要显示的错误信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> stopRepeatRequest = <span class="function"><span class="keyword">function</span> (<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  reqList: any,</span></span></span><br><span class="line"><span class="params"><span class="function">  url: string,</span></span></span><br><span class="line"><span class="params"><span class="function">  cancel: any,</span></span></span><br><span class="line"><span class="params"><span class="function">  errorMessage?: string</span></span></span><br><span class="line"><span class="params"><span class="function"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> errorMsg = errorMessage || <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; reqList.length; i++) &#123;</span><br><span class="line">    <span class="comment">// 过滤白名单请求</span></span><br><span class="line">    <span class="keyword">if</span> (reqList[i] === url &amp;&amp; !whiteListUrls.includes(url)) &#123;</span><br><span class="line">      cancel(errorMsg);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  reqList.push(url);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 允许某个请求可以继续进行</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;array&#125;</span> </span>reqList 全部请求列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>url 请求地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> allowRequest = <span class="function"><span class="keyword">function</span> (<span class="params">reqList: any, url: string</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; reqList.length; i++) &#123;</span><br><span class="line">    <span class="comment">// 过滤白名单请求</span></span><br><span class="line">    <span class="keyword">if</span> (reqList[i] === url &amp;&amp; !whiteListUrls.includes(url)) &#123;</span><br><span class="line">      reqList.splice(i, <span class="number">1</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在 axios 请求拦截器中设置如下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// request拦截器</span></span><br><span class="line">service.interceptors.request.use(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (store.getters.token) &#123;</span><br><span class="line">      config.headers[<span class="string">&quot;Authorization&quot;</span>] = getToken(); <span class="comment">// 让每个请求携带自定义token 请根据实际情况自行修改 Accept</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> cancel;</span><br><span class="line">    <span class="comment">// 设置cancelToken对象</span></span><br><span class="line">    config.cancelToken = <span class="keyword">new</span> axios.CancelToken(<span class="function"><span class="keyword">function</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">      cancel = c;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 阻止重复请求。当上个请求未完成时，相同的请求不会进行</span></span><br><span class="line">    stopRepeatRequest(reqList, config.url <span class="keyword">as</span> string, cancel);</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">Promise</span>.reject(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在响应拦截器设置拦截的间隔</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">service.interceptors.response.use(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> time = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      allowRequest(reqList, response.config.url <span class="keyword">as</span> string);</span><br><span class="line">      <span class="built_in">clearTimeout</span>(time);</span><br><span class="line">    &#125;, <span class="number">200</span>);</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> axios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>标题栏滚动定位</title>
      <link href="/2022/01/04/title-bar-scroll/"/>
      <url>/2022/01/04/title-bar-scroll/</url>
      
        <content type="html"><![CDATA[<p><strong><center>vue 中实现侧边导航栏跟随对应的模块滚动<center></center></center></strong></p><blockquote><p>子模块</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in navList&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">click</span>=<span class="string">&quot;scrollTo(index)&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:class</span>=<span class="string">&quot;&#123; active: active === index &#125;&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;text-ellipsis&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:title</span>=<span class="string">&quot;item.title&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      &#123;&#123; item.title &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;script lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; defineComponent, onMounted, onUnmounted, reactive, toRefs &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">navList</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="built_in">Array</span>,</span><br><span class="line">      <span class="attr">default</span>: [],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">anchorClass</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="built_in">String</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> DATA: any = reactive(&#123;</span><br><span class="line">      <span class="attr">active</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">let</span> METHODS = reactive(&#123;</span><br><span class="line">      <span class="comment">// 滚动监听器</span></span><br><span class="line">      <span class="function"><span class="title">onScroll</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取所有 锚点元素</span></span><br><span class="line">        <span class="keyword">const</span> navContents = <span class="built_in">document</span>.querySelectorAll(props.anchorClass); <span class="comment">// 所有锚点元素的 offsetTop</span></span><br><span class="line">        <span class="keyword">const</span> offsetTopArr: any[] = [];</span><br><span class="line">        navContents.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">let</span> newitem = &lt;HTMLElement&gt;item;</span><br><span class="line">          offsetTopArr.push(newitem.offsetTop);</span><br><span class="line">        &#125;); <span class="comment">// 获取当前文档流的 scrollTop</span></span><br><span class="line">        <span class="keyword">const</span> scrollTop =</span><br><span class="line">          <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop; <span class="comment">// 定义当前点亮的导航下标</span></span><br><span class="line">        <span class="keyword">let</span> navIndex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> n = <span class="number">0</span>; n &lt; offsetTopArr.length; n++) &#123;</span><br><span class="line">          <span class="comment">// 如果 scrollTop 大于等于第n个元素的 offsetTop 则说明 n-1 的内容已经完全不可见</span></span><br><span class="line">          <span class="comment">// 那么此时导航索引就应该是n了</span></span><br><span class="line">          <span class="keyword">if</span> (scrollTop &gt;= offsetTopArr[n]) &#123;</span><br><span class="line">            navIndex = n;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        DATA.active = navIndex;</span><br><span class="line">      &#125;, <span class="comment">//跳转到指定索引的元素</span></span><br><span class="line">      <span class="attr">scrollTo</span>: <span class="function">(<span class="params">index: any</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 获取目标的 offsetTop</span></span><br><span class="line">        <span class="comment">// css选择器是从 1 开始计数，我们是从 0 开始，所以要 +1</span></span><br><span class="line">        <span class="comment">// const targetOffsetTop = document.querySelector(`.content div:nth-child($&#123;index + 1&#125;)`).offsetTop</span></span><br><span class="line">        <span class="keyword">let</span> navContents = <span class="built_in">document</span>.querySelectorAll(props.anchorClass);</span><br><span class="line">        <span class="keyword">const</span> currentOffsetTop = &lt;HTMLElement&gt;navContents[index];</span><br><span class="line">        <span class="keyword">const</span> targetOffsetTop = currentOffsetTop.offsetTop; <span class="comment">// 获取当前 offsetTop</span></span><br><span class="line">        <span class="keyword">let</span> scrollTop =</span><br><span class="line">          <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop; <span class="comment">// 定义一次跳 50 个像素，数字越大跳得越快，但是会有掉帧得感觉，步子迈大了会扯到蛋</span></span><br><span class="line">        <span class="keyword">const</span> STEP = <span class="number">50</span>; <span class="comment">// 判断是往下滑还是往上滑</span></span><br><span class="line">        <span class="keyword">if</span> (scrollTop &gt; targetOffsetTop) &#123;</span><br><span class="line">          <span class="comment">// 往上滑</span></span><br><span class="line">          smoothUp();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 往下滑</span></span><br><span class="line">          smoothDown();</span><br><span class="line">        &#125; <span class="comment">// 定义往下滑函数</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">smoothDown</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 如果当前 scrollTop 小于 targetOffsetTop 说明视口还没滑到指定位置</span></span><br><span class="line">          <span class="keyword">if</span> (scrollTop &lt; targetOffsetTop) &#123;</span><br><span class="line">            <span class="comment">// 如果和目标相差距离大于等于 STEP 就跳 STEP</span></span><br><span class="line">            <span class="comment">// 否则直接跳到目标点，目标是为了防止跳过了。</span></span><br><span class="line">            <span class="keyword">if</span> (targetOffsetTop - scrollTop &gt;= STEP) &#123;</span><br><span class="line">              scrollTop += STEP;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              scrollTop = targetOffsetTop;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">document</span>.body.scrollTop = scrollTop;</span><br><span class="line">            <span class="built_in">document</span>.documentElement.scrollTop = scrollTop; <span class="comment">// 关于 requestAnimationFrame 可以自己查一下，在这种场景下，相比 setInterval 性价比更高</span></span><br><span class="line">            requestAnimationFrame(smoothDown);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="comment">// 定义往上滑函数</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">smoothUp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (scrollTop &gt; targetOffsetTop) &#123;</span><br><span class="line">            <span class="keyword">if</span> (scrollTop - targetOffsetTop &gt;= STEP) &#123;</span><br><span class="line">              scrollTop -= STEP;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              scrollTop = targetOffsetTop;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">document</span>.body.scrollTop = scrollTop;</span><br><span class="line">            <span class="built_in">document</span>.documentElement.scrollTop = scrollTop;</span><br><span class="line">            requestAnimationFrame(smoothUp);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">window</span>.addEventListener(<span class="string">&quot;scroll&quot;</span>, METHODS.onScroll);</span><br><span class="line">    &#125;);</span><br><span class="line">    onUnmounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">window</span>.removeEventListener(<span class="string">&quot;scroll&quot;</span>, METHODS.onScroll);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      ...toRefs(DATA),</span><br><span class="line">      ...toRefs(METHODS),</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">9999</span>;</span><br><span class="line">  <span class="selector-class">.list</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">12px</span> <span class="number">0</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span><br><span class="line">    <span class="comment">// width: 250px;</span></span><br><span class="line">    <span class="attribute">width</span>: calc(<span class="number">100vw</span> / <span class="number">7.68</span>);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">110px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="selector-tag">li</span> &#123;</span><br><span class="line">     <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.active</span> &#123;</span><br><span class="line">     <span class="attribute">color</span>: <span class="number">#f5be1f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jsvascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsvascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3.0中使用vuex辅助函数</title>
      <link href="/2022/01/04/vuex-auxiliary/"/>
      <url>/2022/01/04/vuex-auxiliary/</url>
      
        <content type="html"><![CDATA[<blockquote><p>自定义 hooks</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  mapGetters,</span><br><span class="line">  mapMutations,</span><br><span class="line">  mapState,</span><br><span class="line">  useStore,</span><br><span class="line">  createNamespacedHelpers,</span><br><span class="line">  mapActions,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>mapper  Array | Object</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>mapFn   Function</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>iscomputed 判断是否转变计算属性</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> useMapper = <span class="function">(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  mapFn: <span class="built_in">Function</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  iscomputed: boolean = <span class="literal">true</span></span></span></span><br><span class="line"><span class="params"><span class="function"></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> store = useStore(); <span class="comment">//使用辅助函数解析成一个对象</span></span><br><span class="line">  <span class="keyword">const</span> storeStateFns = mapFn(mapper);</span><br><span class="line">  <span class="keyword">const</span> storeState: any = &#123;&#125;; <span class="comment">//通过Object.keys拿到对象的所有key值，遍历，取出对应的value值，也就是函数</span></span><br><span class="line">  <span class="built_in">Object</span>.keys(storeStateFns).forEach(<span class="function">(<span class="params">keyFn</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 这我们知道辅助函数的内部是通过this.$store来实现的</span></span><br><span class="line">    <span class="comment">// setup中没有this， 所以通过bind来改变this的指向</span></span><br><span class="line">    <span class="keyword">const</span> fn = storeStateFns[keyFn].bind(&#123; <span class="attr">$store</span>: store &#125;); <span class="comment">//拿到函数，作为计算属性的参数，最后在留在一个对象中</span></span><br><span class="line">    storeState[keyFn] = iscomputed ? computed(fn) : fn;</span><br><span class="line">  &#125;); <span class="comment">// storeState是一个对象， key是字符串， value值是ref对象</span></span><br><span class="line">  <span class="keyword">return</span> storeState;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useState = <span class="function">(<span class="params">mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapState);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useMutation = <span class="function">(<span class="params">mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapMutations, <span class="literal">false</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useAction = <span class="function">(<span class="params">mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapActions, <span class="literal">false</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useGetters = <span class="function">(<span class="params">mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapGetters);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// vuex模块 传对应模块名称</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useModuleState = <span class="function">(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  moduleName: string,</span></span></span><br><span class="line"><span class="params"><span class="function">  mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span></span></span><br><span class="line"><span class="params"><span class="function"></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> mapperFn = mapState;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> moduleName === <span class="string">&quot;string&quot;</span> &amp;&amp; moduleName.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    mapperFn = createNamespacedHelpers(moduleName).mapState;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    mapper = moduleName;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapperFn);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useModuleGetters = <span class="function">(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  moduleName: string,</span></span></span><br><span class="line"><span class="params"><span class="function">  mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span></span></span><br><span class="line"><span class="params"><span class="function"></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> mapperFn = mapGetters;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> moduleName === <span class="string">&quot;string&quot;</span> &amp;&amp; moduleName.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    mapperFn = createNamespacedHelpers(moduleName).mapGetters;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    mapper = moduleName;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapperFn);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3.0 </tag>
            
            <tag> vuex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>animejs实现走马灯效果</title>
      <link href="/2022/01/04/trotting-horse-lamp/"/>
      <url>/2022/01/04/trotting-horse-lamp/</url>
      
        <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install animejs</span><br></pre></td></tr></table></figure><blockquote><p>在 main.js 中</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入animejs</span></span><br><span class="line"><span class="keyword">import</span> anime <span class="keyword">from</span> <span class="string">&quot;animejs&quot;</span>;</span><br><span class="line"><span class="comment">//注册全局方法</span></span><br><span class="line"><span class="keyword">const</span> app = createApp(App);</span><br><span class="line">app.config.globalProperties.$anime = anime;</span><br></pre></td></tr></table></figure><blockquote><p>vue 文件模板</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span> @<span class="attr">mousemove</span>=<span class="string">&quot;handlePause()&quot;</span> @<span class="attr">mouseleave</span>=<span class="string">&quot;handlePlay&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxes&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;box&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in overdueCompanyList&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化走马灯</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*  overdueCompanyList 元素列表</span></span><br><span class="line"><span class="comment">*  40 元素高度</span></span><br><span class="line"><span class="comment">*  proxy vue实例 getCurrentInstance()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="attr">initAnime</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// DATA.yTrans = [];</span></span><br><span class="line">  proxy.$anime.set(<span class="string">&#x27;.box&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">translateY</span>: <span class="function"><span class="keyword">function</span> (<span class="params">el: any, i: number, l: any</span>) </span>&#123;</span><br><span class="line">    DATA.yTrans[i] = &#123; <span class="attr">y</span>: i * <span class="number">40</span> &#125;;</span><br><span class="line">      <span class="keyword">return</span> i * <span class="number">40</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  DATA.animation = proxy.$anime(&#123;</span><br><span class="line">    <span class="attr">targets</span>: DATA.yTrans,</span><br><span class="line">    <span class="attr">duration</span>: ((DATA.overdueCompanyList.length * <span class="number">40</span>) / <span class="number">20.8</span>) * <span class="number">1000</span>, <span class="comment">//走一周持续时间</span></span><br><span class="line">    <span class="attr">easing</span>: <span class="string">&#x27;linear&#x27;</span>,</span><br><span class="line">    <span class="attr">y</span>: <span class="string">`-=<span class="subst">$&#123;<span class="number">40</span> * DATA.overdueCompanyList.length&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">loop</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">update</span>: <span class="function"><span class="keyword">function</span> (<span class="params">anim: any</span>) </span>&#123;</span><br><span class="line">    proxy.$anime.set(<span class="string">&#x27;.box&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">translateY</span>: <span class="function"><span class="keyword">function</span> (<span class="params">el: any, i: number, l: any</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 计算元素总高度与yTrans当前值取余 判断 &gt;0? 从而计算 偏移距离</span></span><br><span class="line">      <span class="keyword">return</span> DATA.yTrans[i]?.y % (<span class="number">40</span> * DATA.overdueCompanyList.length) &gt; <span class="number">0</span></span><br><span class="line">            ? DATA.yTrans[i]?.y % (<span class="number">40</span> * DATA.overdueCompanyList.length)</span><br><span class="line">            : (DATA.yTrans[i]?.y % (<span class="number">40</span> * DATA.overdueCompanyList.length)) + <span class="number">40</span> * DATA.overdueCompanyList.length;</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="comment">// animation.pause();</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">handlePlay</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 鼠标移出 动画播放</span></span><br><span class="line">  DATA.animation &amp;&amp; DATA.animation.play();</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">handlePause</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 鼠标移入 动画暂停</span></span><br><span class="line">  DATA.animation &amp;&amp; DATA.animation.pause();</span><br><span class="line">&#125;</span><br><span class="line">  <span class="comment">//移除动画</span></span><br><span class="line">onUnmounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  DATA.animation &amp;&amp; DATA.animation.remove(DATA.yTrans);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>style</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 走马灯</span></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="comment">// margin: 40px auto 0;</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="comment">// margin-bottom: 40px;</span></span><br><span class="line">  <span class="attribute">right</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#989898</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.boxes</span> &#123;</span><br><span class="line">  <span class="comment">// position: relative;</span></span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> animejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wang Qiang blogs</title>
      <link href="/2022/01/04/hello-world/"/>
      <url>/2022/01/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p><em><strong><center><font color="red">life is a facking movie 人生如戏<font><center></center></font></font></center></strong></em></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>值得收藏</title>
      <link href="/2021/12/31/resource/"/>
      <url>/2021/12/31/resource/</url>
      
        <content type="html"><![CDATA[<h3 id="css"><a href="#css" class="headerlink" title="css"></a><center><strong>css</strong><center></center></center></h3><p><a href="https://www.30secondsofcode.org/css/p/1"><center>30 seconds of code<center></center></center></a></p><ul><li>CSS 片段集合包含 CSS3 的实用程序和交互式示例</li><li>包括用于创建常用布局、样式和动画元素的现代技术，以及用于处理用户交互的片段</li></ul><p><a href="https://animate.style/"><center>animate.css<center></center></center></a></p><ul><li><code>Animate.css</code> 是一个随时可用的跨浏览器动画库</li><li>用于您的 Web 项目。非常适合强调、主页、滑块和注意力引导提示</li></ul><p><a href="https://ianlunn.github.io/Hover/"><center>hover.css<center></center></center></a></p><ul><li>一组 CSS3 驱动的悬停效果，可应用于链接、按钮、徽标、SVG、特色图像等</li><li>用于您自己的元素、修改或仅用于灵感。在 CSS、Sass 和 LESS 中可用</li></ul><p><a href="https://glassgenerator.netlify.app/"><center>Glass Morphism<center></center></center></a></p><ul><li>快捷生成自定义毛玻璃效果</li></ul><h3 id="js"><a href="#js" class="headerlink" title="js"></a><center><strong>js</strong><center></center></center></h3><p><a href="http://www.mescroll.com/api.html#begin"><center>mescroll.js<center></center></center></a></p><ul><li><code>mescroll.js</code> 是在 H5 端 运行的下拉刷新和上拉加载插件</li></ul><p><a href="https://www.swiper.com.cn/"><center>swiper<center></center></center></a></p><ul><li><code>Swiper</code> 常用于移动端网站的内容触摸滑动</li><li><code>Swiper</code> 是纯 javascript 打造的滑动特效插件，面向手机、平板电脑等移动终端。</li><li><code>Swiper</code> 能实现触屏焦点图、触屏 Tab 切换、触屏轮播图切换等常用效果。</li><li><code>Swiper</code> 开源、免费、稳定、使用简单、功能强大，是架构移动终端网站的重要选择！</li></ul><p><a href="https://www.lodashjs.com/"><center>lodash.js<center></center></center></a></p><ul><li><code>Lodash</code> 是一个一致性、模块化、高性能的 JavaScript 实用工具库</li></ul><p><a href="https://dayjs.fenxianglu.cn/"><center>Day.js<center></center></center></a></p><ul><li><code>Day.js</code> 是一个极简的 JavaScript 库，可以为现代浏览器解析、验证、操作和显示日期和时间</li></ul><p><a href="https://github.com/hustcc/timeago.js"><center>timeago.js<center></center></center></a></p><ul><li>用于短时间格式化显示</li></ul><p><a href="https://github.com/chenjianfang/scroxt"><center>scroxt.js<center></center></center></a></p><ul><li><code>scroxt.js</code> 是一个字体滚动的插件库，包括视频弹幕滚动，直播弹幕、直播弹幕强制模式、单行水平左右滚动、文本垂直滚动上下，用于简单快捷生成滚动字体</li><li>性能优秀，通过 CPU 加速，缓存字体元素，帧运动，达到最流畅的效果</li></ul><h3 id="vue"><a href="#vue" class="headerlink" title="vue"></a><center><strong>vue</strong><center></center></center></h3><p><a href="https://www.itxst.com/vue-draggable/tutorial.html"><center>vuedraggable<center></center></center></a></p><ul><li>基于<a href="https://www.itxst.com/sortablejs/neuinffi.html"><code>sortable.js</code></a></li><li>移动设备、拖拽和选择文本、智能滚动</li><li>使用于 vue2</li></ul><p><a href="https://www.npmjs.com/package/vue-lazyload"><center>vue-lazyload<center></center></center></a></p><ul><li>使用于 vue2</li><li>图片懒加载</li></ul><p><a href="https://www.npmjs.com/package/vue-easy-print"><center>vue-easy-print<center></center></center></a></p><ul><li>使用于 vue2</li><li>使用 vue 组件的 slot 插槽进行模板加载。 使用 iframe 复制打印区域</li></ul><p><a href="https://github.com/kamranahmedse/driver.js"><center>Driver.js<center></center></center></a></p><ul><li>一个轻量级、无依赖的原生 JavaScript 引擎，可将用户的注意力集中在整个页面上</li><li>制作引导页</li></ul><h3 id="react"><a href="#react" class="headerlink" title="react"></a><center><strong>react</strong><center></center></center></h3><h3 id="UI"><a href="#UI" class="headerlink" title="UI"></a><center><strong>UI</strong><center></center></center></h3><p><a href="https://doc-archive.element-plus.org/#/zh-CN"><center>element-plus<center></center></center></a></p><ul><li>vue3.0UI 组件库</li></ul><p><a href="https://youzan.github.io/vant/v3/#/zh-CN"><center>vant<center></center></center></a></p><ul><li>移动端组件库</li></ul><p><a href="https://ant.design/index-cn"><center>ant design<center></center></center></a></p><ul><li>常用于 react 组件库</li></ul>]]></content>
      
      
      <categories>
          
          <category> resource </category>
          
      </categories>
      
      
        <tags>
            
            <tag> resource </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>threejs</title>
      <link href="/2021/12/29/threejs/"/>
      <url>/2021/12/29/threejs/</url>
      
        <content type="html"><![CDATA[<h3 id="vue-加载-3D-模型"><a href="#vue-加载-3D-模型" class="headerlink" title="vue 加载 3D 模型"></a><center>vue 加载 3D 模型</center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save three</span><br></pre></td></tr></table></figure><ul><li><em><strong>注意：vue2 模型文件放在 static 下，vue3 模型文件放在 public 下</strong></em></li></ul><h4 id="vue-加载-OBJ-模型"><a href="#vue-加载-OBJ-模型" class="headerlink" title="vue 加载 OBJ 模型"></a>vue 加载 OBJ 模型</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import * as Three from &quot;three&quot;;</span><br><span class="line">import &#123; OrbitControls &#125; from &quot;three/examples/jsm/controls/OrbitControls.js&quot;;</span><br><span class="line">import &#123; OBJLoader &#125; from &quot;three/examples/jsm/loaders/OBJLoader.js&quot;;</span><br><span class="line">import &#123; MTLLoader &#125; from &quot;three/examples/jsm/loaders/MTLLoader.js&quot;;</span><br><span class="line">import &#123; ColladaLoader &#125; from &quot;three/examples/jsm/loaders/ColladaLoader&quot;;</span><br><span class="line">// import &#123; GUI &#125; from &#x27;three/examples/jsm/libs/dat.gui.module.js&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    let mesh;</span><br><span class="line">    let meshDAE;</span><br><span class="line">    let plane;</span><br><span class="line">    let camera;</span><br><span class="line">    let scene;</span><br><span class="line">    let gui;</span><br><span class="line">    let renderer;</span><br><span class="line">    // 创建场景</span><br><span class="line">    const createScene = () =&gt; &#123;</span><br><span class="line">      scene = new Three.Scene();</span><br><span class="line">    &#125;;</span><br><span class="line">    // 加载OBJ模型</span><br><span class="line">    const loadOBJ = () =&gt; &#123;</span><br><span class="line">      // const mtlLoader = new MTLLoader()</span><br><span class="line">      const loader = new OBJLoader(); // mtlLoader.load(&#x27;/model/obj/file.mtl&#x27;, function (material) &#123; // 预加载 // material.preload() // 设置当前加载的纹理 // loader.setMaterials(material)</span><br><span class="line">      loader.load(</span><br><span class="line">        &quot;/modules/uploads_files_2792345_Koenigsegg.obj&quot;,</span><br><span class="line">        (loadedMesh) =&gt; &#123;</span><br><span class="line">          // 创建材质 覆写材质可改变颜色</span><br><span class="line">          /* const material = new Three.MeshStandardMaterial(&#123;</span><br><span class="line">          color: &#x27;#F3F3F3&#x27;,</span><br><span class="line">          metalness: 0.4,</span><br><span class="line">          roughness: 0.1</span><br><span class="line">        &#125;)</span><br><span class="line">        // 给几何体成员赋该材质</span><br><span class="line">        loadedMesh.children.forEach(child =&gt; &#123;</span><br><span class="line">          child.material = material</span><br><span class="line">          child.geometry.computeFaceNormals()</span><br><span class="line">          child.geometry.computeVertexNormals()</span><br><span class="line">        &#125;) */</span><br><span class="line">          mesh = loadedMesh; // 添加到场景</span><br><span class="line">          scene.add(mesh);</span><br><span class="line">        &#125;,</span><br><span class="line">        (xhr) =&gt; &#123;</span><br><span class="line">          // 加载进度</span><br><span class="line">          if (xhr.lengthComputable) &#123;</span><br><span class="line">            const percentComplete = (xhr.loaded / xhr.total) * 100;</span><br><span class="line">            console.log(Math.round(percentComplete, 2) + &quot;%&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ); //   &#125;) // 地板</span><br><span class="line">      plane = new Three.Mesh(</span><br><span class="line">        new Three.PlaneBufferGeometry(2000, 2000),</span><br><span class="line">        new Three.MeshPhongMaterial(&#123; color: 0xffffff, depthWrite: false &#125;)</span><br><span class="line">      );</span><br><span class="line">      plane.rotation.x = -Math.PI / 2;</span><br><span class="line">      plane.receiveShadow = true;</span><br><span class="line">      scene.add(plane);</span><br><span class="line">    &#125;; // 加载dae模型</span><br><span class="line">    const loadDAE = () =&gt; &#123;</span><br><span class="line">      const loader = new ColladaLoader();</span><br><span class="line">      loader.load(</span><br><span class="line">        &quot;/model/dae/file.dae&quot;,</span><br><span class="line">        function (result) &#123;</span><br><span class="line">          meshDAE = result.scene.children[0].clone();</span><br><span class="line">          scene.add(meshDAE);</span><br><span class="line">        &#125;,</span><br><span class="line">        (xhr) =&gt; &#123;</span><br><span class="line">          // 加载进度</span><br><span class="line">          if (xhr.lengthComputable) &#123;</span><br><span class="line">            const percentComplete = (xhr.loaded / xhr.total) * 100;</span><br><span class="line">            console.log(Math.round(percentComplete, 2) + &quot;%--DEA&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &#125;; // 初始化dat.GUI简化试验流程</span><br><span class="line">    const initGui = () =&gt; &#123;</span><br><span class="line">      // 声明一个保存需求修改的相关数据的对象</span><br><span class="line">      gui = &#123;&#125;;</span><br><span class="line">      const datGui = new GUI();</span><br><span class="line">      console.log(datGui, gui); // 将设置属性添加到gui当中，gui.add(对象，属性，最小值，最大值）</span><br><span class="line">    &#125;; // 创建光源</span><br><span class="line">    const createLight = () =&gt; &#123;</span><br><span class="line">      // 环境光</span><br><span class="line">      const ambientLight = new Three.AmbientLight(0xffffff, 0.3); // 创建环境光</span><br><span class="line">      scene.add(ambientLight); // 将环境光添加到场景</span><br><span class="line">      const spotLight = new Three.SpotLight(&quot;#ffffff&quot;, 0.7); // 创建聚光灯</span><br><span class="line">      spotLight.position.set(1600, 1660, 100);</span><br><span class="line">      spotLight.castShadow = true;</span><br><span class="line">      scene.add(spotLight);</span><br><span class="line">    &#125;; // 创建相机</span><br><span class="line">    const createCamera = () =&gt; &#123;</span><br><span class="line">      const width = window.innerWidth; // 窗口宽度</span><br><span class="line">      const height = window.innerHeight; // 窗口高度</span><br><span class="line">      const k = width / height; // 窗口宽高比</span><br><span class="line">      camera = new Three.PerspectiveCamera(75, k, 0.1, 1000);</span><br><span class="line">      camera.position.set(400, 400, 100);</span><br><span class="line">      camera.lookAt(scene.position);</span><br><span class="line">      scene.add(camera);</span><br><span class="line">    &#125;; // 创建渲染器</span><br><span class="line">    const createRender = () =&gt; &#123;</span><br><span class="line">      renderer = new Three.WebGLRenderer(&#123; antialias: true, alpha: true &#125;);</span><br><span class="line">      renderer.setSize(window.innerWidth, window.innerHeight);</span><br><span class="line">      renderer.shadowMap.enabled = true; // 显示阴影</span><br><span class="line">      renderer.shadowMap.type = Three.PCFSoftShadowMap;</span><br><span class="line">      renderer.setClearColor(&quot;#000000&quot;); // 设置背景颜色</span><br><span class="line">      document.body.appendChild(renderer.domElement);</span><br><span class="line">    &#125;;</span><br><span class="line">    const render = () =&gt; &#123;</span><br><span class="line">      // if (mesh) &#123;</span><br><span class="line">      //   mesh.rotation.y += 0.005</span><br><span class="line">      // &#125;</span><br><span class="line">      renderer.render(scene, camera);</span><br><span class="line">      requestAnimationFrame(render);</span><br><span class="line">    &#125;; // 创建控件对象</span><br><span class="line">    const createControls = () =&gt; &#123;</span><br><span class="line">      // eslint-disable-next-line no-new</span><br><span class="line">      new OrbitControls(camera, renderer.domElement);</span><br><span class="line">    &#125;; // 窗口自适应</span><br><span class="line">    const resize = () =&gt; &#123;</span><br><span class="line">      window.addEventListener(&quot;resize&quot;, () =&gt; &#123;</span><br><span class="line">        // 初始化摄像机</span><br><span class="line">        camera &amp;&amp; (camera.aspect = window.innerWidth / window.innerHeight);</span><br><span class="line">        camera &amp;&amp; camera.updateProjectionMatrix(); // 初始化渲染器尺寸</span><br><span class="line">        renderer &amp;&amp; renderer.setSize(window.innerWidth, window.innerHeight);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;; // 初始化</span><br><span class="line">    const init = () =&gt; &#123;</span><br><span class="line">      createScene(); // 创建场景 //   initGui() // 试验流程</span><br><span class="line">      loadOBJ(); // 加载OBJ模型 //   loadDAE() // 加载DAE模型</span><br><span class="line">      createCamera(); // 创建相机</span><br><span class="line">      createLight(); // 创建光源</span><br><span class="line">      createRender(); // 创建渲染器</span><br><span class="line">      createControls(); // 创建控件对象</span><br><span class="line">      render(); // 渲染</span><br><span class="line">      resize(); // 自适应</span><br><span class="line">    &#125;;</span><br><span class="line">    init();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="vue-加载-GTL-模型"><a href="#vue-加载-GTL-模型" class="headerlink" title="vue 加载 GTL 模型"></a>vue 加载 GTL 模型</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import * as Three from &quot;three&quot;;</span><br><span class="line">import &#123; OrbitControls &#125; from &quot;three/examples/jsm/controls/OrbitControls.js&quot;;</span><br><span class="line">import &#123; GLTFLoader &#125; from &quot;three/examples/jsm/loaders/GLTFLoader.js&quot;;</span><br><span class="line">import &#123; ColladaLoader &#125; from &quot;three/examples/jsm/loaders/ColladaLoader&quot;;</span><br><span class="line">import &#123; DRACOLoader &#125; from &quot;three/examples/jsm/loaders/DRACOLoader.js&quot;;</span><br><span class="line">import &#123; RoomEnvironment &#125; from &quot;three/examples/jsm/environments/RoomEnvironment.js&quot;;</span><br><span class="line">import Stats from &quot;three/examples/jsm/libs/stats.module&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    let plane;</span><br><span class="line">    let camera;</span><br><span class="line">    let scene;</span><br><span class="line">    let renderer;</span><br><span class="line">    let clock;</span><br><span class="line">    let mixer;</span><br><span class="line">    let controls;</span><br><span class="line">    let stats; // 创建场景</span><br><span class="line">    const createScene = () =&gt; &#123;</span><br><span class="line">      scene = new Three.Scene();</span><br><span class="line">      scene.background = new Three.Color(0xbfe3dd);</span><br><span class="line">      const pmremGenerator = new Three.PMREMGenerator(renderer);</span><br><span class="line">      scene.environment = pmremGenerator.fromScene(</span><br><span class="line">        new RoomEnvironment(),</span><br><span class="line">        0.04</span><br><span class="line">      ).texture;</span><br><span class="line">      clock = new Three.Clock();</span><br><span class="line">      stats = new Stats();</span><br><span class="line">    &#125;; // 加载GTL模型</span><br><span class="line">    const loadGTL = () =&gt; &#123;</span><br><span class="line">      const dracoLoader = new DRACOLoader();</span><br><span class="line">      dracoLoader.setDecoderPath(&quot;/js/gltf/&quot;);</span><br><span class="line">      const loader = new GLTFLoader();</span><br><span class="line">      loader.setDRACOLoader(dracoLoader);</span><br><span class="line">      loader.load(</span><br><span class="line">        &quot;/modules/LittlestTokyo.glb&quot;,</span><br><span class="line">        function (gltf) &#123;</span><br><span class="line">          const model = gltf.scene;</span><br><span class="line">          model.position.set(1, 1, 0);</span><br><span class="line">          model.scale.set(0.01, 0.01, 0.01);</span><br><span class="line">          scene.add(model);</span><br><span class="line">          mixer = new Three.AnimationMixer(model);</span><br><span class="line">          mixer.clipAction(gltf.animations[0]).play();</span><br><span class="line">          render();</span><br><span class="line">        &#125;,</span><br><span class="line">        undefined,</span><br><span class="line">        function (error) &#123;</span><br><span class="line">          console.error(error);</span><br><span class="line">        &#125;</span><br><span class="line">      ); // 地板</span><br><span class="line">      plane = new Three.Mesh(</span><br><span class="line">        new Three.PlaneBufferGeometry(500, 400),</span><br><span class="line">        new Three.MeshPhongMaterial(&#123; color: 0xa08c66, depthWrite: false &#125;)</span><br><span class="line">      );</span><br><span class="line">      plane.rotation.x = -Math.PI / 2;</span><br><span class="line">      plane.receiveShadow = true;</span><br><span class="line">      scene.add(plane);</span><br><span class="line">    &#125;; // 创建光源</span><br><span class="line">    const createLight = () =&gt; &#123;</span><br><span class="line">      // 环境光</span><br><span class="line">      const ambientLight = new Three.AmbientLight(0xffffff, 0.3); // 创建环境光</span><br><span class="line">      scene.add(ambientLight); // 将环境光添加到场景</span><br><span class="line">      const spotLight = new Three.SpotLight(&quot;#ffffff&quot;, 0.7); // 创建聚光灯</span><br><span class="line">      spotLight.position.set(1600, 1660, 100);</span><br><span class="line">      spotLight.castShadow = true;</span><br><span class="line">      scene.add(spotLight);</span><br><span class="line">    &#125;; // 创建相机</span><br><span class="line">    const createCamera = () =&gt; &#123;</span><br><span class="line">      const width = window.innerWidth; // 窗口宽度</span><br><span class="line">      const height = window.innerHeight; // 窗口高度</span><br><span class="line">      const k = width / height; // 窗口宽高比</span><br><span class="line">      camera = new Three.PerspectiveCamera(40, k, 1, 100);</span><br><span class="line">      camera.position.set(5, 2, 8);</span><br><span class="line">      camera.lookAt(scene.position);</span><br><span class="line">      scene.add(camera);</span><br><span class="line">    &#125;; // 创建渲染器</span><br><span class="line">    const createRender = () =&gt; &#123;</span><br><span class="line">      renderer = new Three.WebGLRenderer(&#123; antialias: true, alpha: true &#125;);</span><br><span class="line">      renderer.setSize(window.innerWidth, window.innerHeight - 84);</span><br><span class="line">      renderer.shadowMap.enabled = true; // 显示阴影</span><br><span class="line">      renderer.shadowMap.type = Three.PCFSoftShadowMap;</span><br><span class="line">      renderer.setClearColor(&quot;#000000&quot;); // 设置背景颜色</span><br><span class="line">      document.body.appendChild(renderer.domElement);</span><br><span class="line">    &#125;;</span><br><span class="line">    const render = () =&gt; &#123;</span><br><span class="line">      const delta = clock.getDelta();</span><br><span class="line">      mixer.update(delta);</span><br><span class="line">      controls &amp;&amp; controls.update();</span><br><span class="line">      stats.update();</span><br><span class="line">      renderer &amp;&amp; renderer.render(scene, camera);</span><br><span class="line">      requestAnimationFrame(render);</span><br><span class="line">    &#125;; // 创建控件对象</span><br><span class="line">    const createControls = () =&gt; &#123;</span><br><span class="line">      // eslint-disable-next-line no-new</span><br><span class="line">      controls = new OrbitControls(camera, renderer.domElement);</span><br><span class="line">      controls.target.set(0, 0.5, 0);</span><br><span class="line">      controls.update();</span><br><span class="line">      controls.enablePan = false;</span><br><span class="line">      controls.enableDamping = true;</span><br><span class="line">    &#125;; // 窗口自适应</span><br><span class="line">    const resize = () =&gt; &#123;</span><br><span class="line">      window.addEventListener(&quot;resize&quot;, () =&gt; &#123;</span><br><span class="line">        // 初始化摄像机</span><br><span class="line">        camera &amp;&amp; (camera.aspect = window.innerWidth / window.innerHeight);</span><br><span class="line">        camera &amp;&amp; camera.updateProjectionMatrix(); // 初始化渲染器尺寸</span><br><span class="line">        renderer &amp;&amp;</span><br><span class="line">          renderer.setSize(window.innerWidth, window.innerHeight - 84);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;; // 初始化</span><br><span class="line">    const init = () =&gt; &#123;</span><br><span class="line">      createRender(); // 创建渲染器</span><br><span class="line">      createScene(); // 创建场景</span><br><span class="line">      loadGTL(); // 加载GTL模型</span><br><span class="line">      createCamera(); // 创建相机</span><br><span class="line">      createLight(); // 创建光源</span><br><span class="line">      createControls(); // 创建控件对象</span><br><span class="line">      resize(); // 自适应</span><br><span class="line">    &#125;;</span><br><span class="line">    init();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="模型交互"><a href="#模型交互" class="headerlink" title="模型交互"></a>模型交互</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户交互</span></span><br><span class="line"><span class="keyword">let</span> selectObject = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  event.preventDefault();</span><br><span class="line">  <span class="keyword">if</span> (event.button != <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">const</span> mouse = <span class="keyword">new</span> Three.Vector3();</span><br><span class="line">  mouse.x = (event.clientX / <span class="built_in">window</span>.innerWidth) * <span class="number">2</span> - <span class="number">1</span>;</span><br><span class="line">  mouse.y = -(event.clientY / <span class="built_in">window</span>.innerHeight) * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;mouse: &quot;</span>, mouse);</span><br><span class="line">  <span class="keyword">const</span> raycaster = <span class="keyword">new</span> Three.Raycaster();</span><br><span class="line">  raycaster.setFromCamera(mouse, camera);</span><br><span class="line">  <span class="keyword">const</span> intersected = raycaster.intersectObjects(scene.children, <span class="literal">false</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(intersected);</span><br><span class="line">  <span class="keyword">if</span> (intersected.length) &#123;</span><br><span class="line">    <span class="keyword">const</span> found = intersected[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">const</span> faceIndex = found.faceIndex;</span><br><span class="line">    <span class="keyword">const</span> geometry = found.object.geometry;</span><br><span class="line">    found.object.material.color.set(<span class="number">0xff0000</span>);</span><br><span class="line">    <span class="keyword">const</span> modelID = found.object.modelID;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">window</span>.onpointerdown = selectObject;</span><br></pre></td></tr></table></figure><h4 id="场景销毁"><a href="#场景销毁" class="headerlink" title="场景销毁"></a>场景销毁</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 销毁</span></span><br><span class="line"><span class="keyword">const</span> removeCube = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> allChildren = scene.children;</span><br><span class="line">  <span class="keyword">if</span> (allChildren.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    renderer.setSize(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    allChildren.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      scene.remove(item);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  scene.traverse(<span class="function">(<span class="params">child</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (child.material) &#123;</span><br><span class="line">      child.material.dispose();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (child.geometry) &#123;</span><br><span class="line">      child.geometry.dispose();</span><br><span class="line">    &#125;</span><br><span class="line">    child = <span class="literal">null</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  renderer.forceContextLoss();</span><br><span class="line">  renderer.dispose();</span><br><span class="line">  scene.clear();</span><br><span class="line">  scene = <span class="literal">null</span>;</span><br><span class="line">  camera = <span class="literal">null</span>;</span><br><span class="line">  controls = <span class="literal">null</span>;</span><br><span class="line">  renderer.domElement = <span class="literal">null</span>;</span><br><span class="line">  renderer = <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3.0 </tag>
            
            <tag> threejs </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
