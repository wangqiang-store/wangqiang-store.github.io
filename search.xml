<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>标题栏滚动定位</title>
      <link href="/2022/01/04/title-bar-scroll/"/>
      <url>/2022/01/04/title-bar-scroll/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;24&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in navList&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">click</span>=<span class="string">&quot;scrollTo(index)&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:class</span>=<span class="string">&quot;&#123; active: active === index &#125;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;text-ellipsis&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:title</span>=<span class="string">&quot;item.title&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">            &#123;&#123; item.title &#125;&#125;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;script lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; defineComponent, onMounted, onUnmounted, reactive, toRefs &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">navList</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="built_in">Array</span>,</span><br><span class="line">      <span class="attr">default</span>: [],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">anchorClass</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="built_in">String</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> DATA: any = reactive(&#123;</span><br><span class="line">      <span class="attr">active</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">let</span> METHODS = reactive(&#123;</span><br><span class="line">      <span class="comment">// 滚动监听器</span></span><br><span class="line">      <span class="function"><span class="title">onScroll</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取所有 锚点元素</span></span><br><span class="line">        <span class="keyword">const</span> navContents = <span class="built_in">document</span>.querySelectorAll(props.anchorClass); <span class="comment">// 所有锚点元素的 offsetTop</span></span><br><span class="line">        <span class="keyword">const</span> offsetTopArr: any[] = [];</span><br><span class="line">        navContents.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">let</span> newitem = &lt;HTMLElement&gt;item;</span><br><span class="line">          offsetTopArr.push(newitem.offsetTop);</span><br><span class="line">        &#125;); <span class="comment">// 获取当前文档流的 scrollTop</span></span><br><span class="line">        <span class="keyword">const</span> scrollTop =</span><br><span class="line">          <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop; <span class="comment">// 定义当前点亮的导航下标</span></span><br><span class="line">        <span class="keyword">let</span> navIndex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> n = <span class="number">0</span>; n &lt; offsetTopArr.length; n++) &#123;</span><br><span class="line">          <span class="comment">// 如果 scrollTop 大于等于第n个元素的 offsetTop 则说明 n-1 的内容已经完全不可见</span></span><br><span class="line">          <span class="comment">// 那么此时导航索引就应该是n了</span></span><br><span class="line">          <span class="keyword">if</span> (scrollTop &gt;= offsetTopArr[n]) &#123;</span><br><span class="line">            navIndex = n;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        DATA.active = navIndex;</span><br><span class="line">      &#125;, <span class="comment">//跳转到指定索引的元素</span></span><br><span class="line">      <span class="attr">scrollTo</span>: <span class="function">(<span class="params">index: any</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 获取目标的 offsetTop</span></span><br><span class="line">        <span class="comment">// css选择器是从 1 开始计数，我们是从 0 开始，所以要 +1</span></span><br><span class="line">        <span class="comment">// const targetOffsetTop = document.querySelector(`.content div:nth-child($&#123;index + 1&#125;)`).offsetTop</span></span><br><span class="line">        <span class="keyword">let</span> navContents = <span class="built_in">document</span>.querySelectorAll(props.anchorClass);</span><br><span class="line">        <span class="keyword">const</span> currentOffsetTop = &lt;HTMLElement&gt;navContents[index];</span><br><span class="line">        <span class="keyword">const</span> targetOffsetTop = currentOffsetTop.offsetTop; <span class="comment">// 获取当前 offsetTop</span></span><br><span class="line">        <span class="keyword">let</span> scrollTop =</span><br><span class="line">          <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop; <span class="comment">// 定义一次跳 50 个像素，数字越大跳得越快，但是会有掉帧得感觉，步子迈大了会扯到蛋</span></span><br><span class="line">        <span class="keyword">const</span> STEP = <span class="number">50</span>; <span class="comment">// 判断是往下滑还是往上滑</span></span><br><span class="line">        <span class="keyword">if</span> (scrollTop &gt; targetOffsetTop) &#123;</span><br><span class="line">          <span class="comment">// 往上滑</span></span><br><span class="line">          smoothUp();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 往下滑</span></span><br><span class="line">          smoothDown();</span><br><span class="line">        &#125; <span class="comment">// 定义往下滑函数</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">smoothDown</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">// 如果当前 scrollTop 小于 targetOffsetTop 说明视口还没滑到指定位置</span></span><br><span class="line">          <span class="keyword">if</span> (scrollTop &lt; targetOffsetTop) &#123;</span><br><span class="line">            <span class="comment">// 如果和目标相差距离大于等于 STEP 就跳 STEP</span></span><br><span class="line">            <span class="comment">// 否则直接跳到目标点，目标是为了防止跳过了。</span></span><br><span class="line">            <span class="keyword">if</span> (targetOffsetTop - scrollTop &gt;= STEP) &#123;</span><br><span class="line">              scrollTop += STEP;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              scrollTop = targetOffsetTop;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">document</span>.body.scrollTop = scrollTop;</span><br><span class="line">            <span class="built_in">document</span>.documentElement.scrollTop = scrollTop; <span class="comment">// 关于 requestAnimationFrame 可以自己查一下，在这种场景下，相比 setInterval 性价比更高</span></span><br><span class="line">            requestAnimationFrame(smoothDown);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="comment">// 定义往上滑函数</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">smoothUp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (scrollTop &gt; targetOffsetTop) &#123;</span><br><span class="line">            <span class="keyword">if</span> (scrollTop - targetOffsetTop &gt;= STEP) &#123;</span><br><span class="line">              scrollTop -= STEP;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              scrollTop = targetOffsetTop;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">document</span>.body.scrollTop = scrollTop;</span><br><span class="line">            <span class="built_in">document</span>.documentElement.scrollTop = scrollTop;</span><br><span class="line">            requestAnimationFrame(smoothUp);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">window</span>.addEventListener(<span class="string">&quot;scroll&quot;</span>, METHODS.onScroll);</span><br><span class="line">    &#125;);</span><br><span class="line">    onUnmounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">window</span>.removeEventListener(<span class="string">&quot;scroll&quot;</span>, METHODS.onScroll);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      ...toRefs(DATA),</span><br><span class="line">      ...toRefs(METHODS),</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">9999</span>;</span><br><span class="line">  <span class="selector-class">.list</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">12px</span> <span class="number">0</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span><br><span class="line">    <span class="comment">// width: 250px;</span></span><br><span class="line">    <span class="attribute">width</span>: calc(<span class="number">100vw</span> / <span class="number">7.68</span>);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">110px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="selector-tag">li</span> &#123;</span><br><span class="line">     <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.active</span> &#123;</span><br><span class="line">     <span class="attribute">color</span>: <span class="number">#f5be1f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> utils </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3.0中使用vuex辅助函数</title>
      <link href="/2022/01/04/vuex-auxiliary/"/>
      <url>/2022/01/04/vuex-auxiliary/</url>
      
        <content type="html"><![CDATA[<blockquote><p>自定义 hooks</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  mapGetters,</span><br><span class="line">  mapMutations,</span><br><span class="line">  mapState,</span><br><span class="line">  useStore,</span><br><span class="line">  createNamespacedHelpers,</span><br><span class="line">  mapActions,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>mapper  Array | Object</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>mapFn   Function</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>iscomputed 判断是否转变计算属性</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> useMapper = <span class="function">(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  mapFn: <span class="built_in">Function</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  iscomputed: boolean = <span class="literal">true</span></span></span></span><br><span class="line"><span class="params"><span class="function"></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> store = useStore(); <span class="comment">//使用辅助函数解析成一个对象</span></span><br><span class="line">  <span class="keyword">const</span> storeStateFns = mapFn(mapper);</span><br><span class="line">  <span class="keyword">const</span> storeState: any = &#123;&#125;; <span class="comment">//通过Object.keys拿到对象的所有key值，遍历，取出对应的value值，也就是函数</span></span><br><span class="line">  <span class="built_in">Object</span>.keys(storeStateFns).forEach(<span class="function">(<span class="params">keyFn</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 这我们知道辅助函数的内部是通过this.$store来实现的</span></span><br><span class="line">    <span class="comment">// setup中没有this， 所以通过bind来改变this的指向</span></span><br><span class="line">    <span class="keyword">const</span> fn = storeStateFns[keyFn].bind(&#123; <span class="attr">$store</span>: store &#125;); <span class="comment">//拿到函数，作为计算属性的参数，最后在留在一个对象中</span></span><br><span class="line">    storeState[keyFn] = iscomputed ? computed(fn) : fn;</span><br><span class="line">  &#125;); <span class="comment">// storeState是一个对象， key是字符串， value值是ref对象</span></span><br><span class="line">  <span class="keyword">return</span> storeState;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useState = <span class="function">(<span class="params">mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapState);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useMutation = <span class="function">(<span class="params">mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapMutations, <span class="literal">false</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useAction = <span class="function">(<span class="params">mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapActions, <span class="literal">false</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useGetters = <span class="function">(<span class="params">mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapGetters);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// vuex模块 传对应模块名称</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useModuleState = <span class="function">(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  moduleName: string,</span></span></span><br><span class="line"><span class="params"><span class="function">  mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span></span></span><br><span class="line"><span class="params"><span class="function"></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> mapperFn = mapState;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> moduleName === <span class="string">&quot;string&quot;</span> &amp;&amp; moduleName.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    mapperFn = createNamespacedHelpers(moduleName).mapState;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    mapper = moduleName;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapperFn);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useModuleGetters = <span class="function">(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  moduleName: string,</span></span></span><br><span class="line"><span class="params"><span class="function">  mapper: <span class="built_in">Array</span>&lt;any&gt; | <span class="built_in">Object</span></span></span></span><br><span class="line"><span class="params"><span class="function"></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> mapperFn = mapGetters;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> moduleName === <span class="string">&quot;string&quot;</span> &amp;&amp; moduleName.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    mapperFn = createNamespacedHelpers(moduleName).mapGetters;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    mapper = moduleName;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> useMapper(mapper, mapperFn);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3.0 </tag>
            
            <tag> vuex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>animejs实现走马灯效果</title>
      <link href="/2022/01/04/trotting-horse-lamp/"/>
      <url>/2022/01/04/trotting-horse-lamp/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install animejs</span><br></pre></td></tr></table></figure><blockquote><p>在 main.js 中</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入animejs</span></span><br><span class="line"><span class="keyword">import</span> anime <span class="keyword">from</span> <span class="string">&quot;animejs&quot;</span>;</span><br><span class="line"><span class="comment">//注册全局方法</span></span><br><span class="line"><span class="keyword">const</span> app = createApp(App);</span><br><span class="line">app.config.globalProperties.$anime = anime;</span><br></pre></td></tr></table></figure><blockquote><p>vue 文件模板</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span> @<span class="attr">mousemove</span>=<span class="string">&quot;handlePause()&quot;</span> @<span class="attr">mouseleave</span>=<span class="string">&quot;handlePlay&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxes&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;box&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in overdueCompanyList&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化走马灯</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*  overdueCompanyList 元素列表</span></span><br><span class="line"><span class="comment">*  40 元素高度</span></span><br><span class="line"><span class="comment">*  proxy vue实例 getCurrentInstance()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="attr">initAnime</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// DATA.yTrans = [];</span></span><br><span class="line">  proxy.$anime.set(<span class="string">&#x27;.box&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">translateY</span>: <span class="function"><span class="keyword">function</span> (<span class="params">el: any, i: number, l: any</span>) </span>&#123;</span><br><span class="line">    DATA.yTrans[i] = &#123; <span class="attr">y</span>: i * <span class="number">40</span> &#125;;</span><br><span class="line">      <span class="keyword">return</span> i * <span class="number">40</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  DATA.animation = proxy.$anime(&#123;</span><br><span class="line">    <span class="attr">targets</span>: DATA.yTrans,</span><br><span class="line">    <span class="attr">duration</span>: ((DATA.overdueCompanyList.length * <span class="number">40</span>) / <span class="number">20.8</span>) * <span class="number">1000</span>, <span class="comment">//走一周持续时间</span></span><br><span class="line">    <span class="attr">easing</span>: <span class="string">&#x27;linear&#x27;</span>,</span><br><span class="line">    <span class="attr">y</span>: <span class="string">`-=<span class="subst">$&#123;<span class="number">40</span> * DATA.overdueCompanyList.length&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">loop</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">update</span>: <span class="function"><span class="keyword">function</span> (<span class="params">anim: any</span>) </span>&#123;</span><br><span class="line">    proxy.$anime.set(<span class="string">&#x27;.box&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">translateY</span>: <span class="function"><span class="keyword">function</span> (<span class="params">el: any, i: number, l: any</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 计算元素总高度与yTrans当前值取余 判断 &gt;0? 从而计算 偏移距离</span></span><br><span class="line">      <span class="keyword">return</span> DATA.yTrans[i]?.y % (<span class="number">40</span> * DATA.overdueCompanyList.length) &gt; <span class="number">0</span></span><br><span class="line">            ? DATA.yTrans[i]?.y % (<span class="number">40</span> * DATA.overdueCompanyList.length)</span><br><span class="line">            : (DATA.yTrans[i]?.y % (<span class="number">40</span> * DATA.overdueCompanyList.length)) + <span class="number">40</span> * DATA.overdueCompanyList.length;</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="comment">// animation.pause();</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">handlePlay</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 鼠标移出 动画播放</span></span><br><span class="line">  DATA.animation &amp;&amp; DATA.animation.play();</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">handlePause</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 鼠标移入 动画暂停</span></span><br><span class="line">  DATA.animation &amp;&amp; DATA.animation.pause();</span><br><span class="line">&#125;</span><br><span class="line">  <span class="comment">//移除动画</span></span><br><span class="line">onUnmounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  DATA.animation &amp;&amp; DATA.animation.remove(DATA.yTrans);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>style</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 走马灯</span></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="comment">// margin: 40px auto 0;</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="comment">// margin-bottom: 40px;</span></span><br><span class="line">  <span class="attribute">right</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#989898</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.boxes</span> &#123;</span><br><span class="line">  <span class="comment">// position: relative;</span></span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> animejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wang Qiang blogs</title>
      <link href="/2022/01/04/hello-world/"/>
      <url>/2022/01/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p><em><strong><center><font color="red">life is a facking movie 人生如戏<font><center></center></font></font></center></strong></em></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>codebase</title>
      <link href="/2021/12/31/resource/"/>
      <url>/2021/12/31/resource/</url>
      
        <content type="html"><![CDATA[<h3 id="css"><a href="#css" class="headerlink" title="css"></a><center><strong>css</strong><center></center></center></h3><p><a href="https://www.30secondsofcode.org/css/p/1"><center>30 seconds of code<center></center></center></a></p><ul><li>CSS 片段集合包含 CSS3 的实用程序和交互式示例</li><li>包括用于创建常用布局、样式和动画元素的现代技术，以及用于处理用户交互的片段</li></ul><p><a href="https://animate.style/"><center>animate.css<center></center></center></a></p><ul><li><code>Animate.css</code> 是一个随时可用的跨浏览器动画库</li><li>用于您的 Web 项目。非常适合强调、主页、滑块和注意力引导提示</li></ul><p><a href="https://ianlunn.github.io/Hover/"><center>hover.css<center></center></center></a></p><ul><li>一组 CSS3 驱动的悬停效果，可应用于链接、按钮、徽标、SVG、特色图像等</li><li>用于您自己的元素、修改或仅用于灵感。在 CSS、Sass 和 LESS 中可用</li></ul><p><a href="https://glassgenerator.netlify.app/"><center>Glass Morphism<center></center></center></a></p><ul><li>快捷生成自定义毛玻璃效果</li></ul><h3 id="js"><a href="#js" class="headerlink" title="js"></a><center><strong>js</strong><center></center></center></h3><p><a href="http://www.mescroll.com/api.html#begin"><center>mescroll.js<center></center></center></a></p><ul><li><code>mescroll.js</code> 是在 H5 端 运行的下拉刷新和上拉加载插件</li></ul><p><a href="https://www.swiper.com.cn/"><center>swiper<center></center></center></a></p><ul><li><code>Swiper</code> 常用于移动端网站的内容触摸滑动</li><li><code>Swiper</code> 是纯 javascript 打造的滑动特效插件，面向手机、平板电脑等移动终端。</li><li><code>Swiper</code> 能实现触屏焦点图、触屏 Tab 切换、触屏轮播图切换等常用效果。</li><li><code>Swiper</code> 开源、免费、稳定、使用简单、功能强大，是架构移动终端网站的重要选择！</li></ul><p><a href="https://www.lodashjs.com/"><center>lodash.js<center></center></center></a></p><ul><li><code>Lodash</code> 是一个一致性、模块化、高性能的 JavaScript 实用工具库</li></ul><p><a href="https://dayjs.fenxianglu.cn/"><center>Day.js<center></center></center></a></p><ul><li><code>Day.js</code> 是一个极简的 JavaScript 库，可以为现代浏览器解析、验证、操作和显示日期和时间</li></ul><p><a href="https://github.com/hustcc/timeago.js"><center>timeago.js<center></center></center></a></p><ul><li>用于短时间格式化显示</li></ul><p><a href="https://github.com/chenjianfang/scroxt"><center>scroxt.js<center></center></center></a></p><ul><li><code>scroxt.js</code> 是一个字体滚动的插件库，包括视频弹幕滚动，直播弹幕、直播弹幕强制模式、单行水平左右滚动、文本垂直滚动上下，用于简单快捷生成滚动字体</li><li>性能优秀，通过 CPU 加速，缓存字体元素，帧运动，达到最流畅的效果</li></ul><h3 id="vue"><a href="#vue" class="headerlink" title="vue"></a><center><strong>vue</strong><center></center></center></h3><p><a href="https://www.itxst.com/vue-draggable/tutorial.html"><center>vuedraggable<center></center></center></a></p><ul><li>基于<a href="https://www.itxst.com/sortablejs/neuinffi.html"><code>sortable.js</code></a></li><li>移动设备、拖拽和选择文本、智能滚动</li><li>使用于 vue2</li></ul><p><a href="https://www.npmjs.com/package/vue-lazyload"><center>vue-lazyload<center></center></center></a></p><ul><li>使用于 vue2</li><li>图片懒加载</li></ul><p><a href="https://www.npmjs.com/package/vue-easy-print"><center>vue-easy-print<center></center></center></a></p><ul><li>使用于 vue2</li><li>使用 vue 组件的 slot 插槽进行模板加载。 使用 iframe 复制打印区域</li></ul><h3 id="react"><a href="#react" class="headerlink" title="react"></a><center><strong>react</strong><center></center></center></h3><h3 id="UI"><a href="#UI" class="headerlink" title="UI"></a><center><strong>UI</strong><center></center></center></h3><p><a href="https://doc-archive.element-plus.org/#/zh-CN"><center>element-plus<center></center></center></a></p><ul><li>vue3.0UI 组件库</li></ul><p><a href="https://youzan.github.io/vant/v3/#/zh-CN"><center>vant<center></center></center></a></p><ul><li>移动端组件库</li></ul><p><a href="https://ant.design/index-cn"><center>ant design<center></center></center></a></p><ul><li>常用于 react 组件库</li></ul>]]></content>
      
      
      <categories>
          
          <category> resource </category>
          
      </categories>
      
      
        <tags>
            
            <tag> resource </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>threejs</title>
      <link href="/2021/12/29/threejs/"/>
      <url>/2021/12/29/threejs/</url>
      
        <content type="html"><![CDATA[<h3 id="vue-加载-3D-模型"><a href="#vue-加载-3D-模型" class="headerlink" title="vue 加载 3D 模型"></a><center>vue 加载 3D 模型</center></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save three</span><br></pre></td></tr></table></figure><ul><li><em><strong>注意：vue2 模型文件放在 static 下，vue3 模型文件放在 public 下</strong></em></li></ul><h4 id="vue-加载-OBJ-模型"><a href="#vue-加载-OBJ-模型" class="headerlink" title="vue 加载 OBJ 模型"></a>vue 加载 OBJ 模型</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import * as Three from &quot;three&quot;;</span><br><span class="line">import &#123; OrbitControls &#125; from &quot;three/examples/jsm/controls/OrbitControls.js&quot;;</span><br><span class="line">import &#123; OBJLoader &#125; from &quot;three/examples/jsm/loaders/OBJLoader.js&quot;;</span><br><span class="line">import &#123; MTLLoader &#125; from &quot;three/examples/jsm/loaders/MTLLoader.js&quot;;</span><br><span class="line">import &#123; ColladaLoader &#125; from &quot;three/examples/jsm/loaders/ColladaLoader&quot;;</span><br><span class="line">// import &#123; GUI &#125; from &#x27;three/examples/jsm/libs/dat.gui.module.js&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    let mesh;</span><br><span class="line">    let meshDAE;</span><br><span class="line">    let plane;</span><br><span class="line">    let camera;</span><br><span class="line">    let scene;</span><br><span class="line">    let gui;</span><br><span class="line">    let renderer;</span><br><span class="line">    // 创建场景</span><br><span class="line">    const createScene = () =&gt; &#123;</span><br><span class="line">      scene = new Three.Scene();</span><br><span class="line">    &#125;;</span><br><span class="line">    // 加载OBJ模型</span><br><span class="line">    const loadOBJ = () =&gt; &#123;</span><br><span class="line">      // const mtlLoader = new MTLLoader()</span><br><span class="line">      const loader = new OBJLoader(); // mtlLoader.load(&#x27;/model/obj/file.mtl&#x27;, function (material) &#123; // 预加载 // material.preload() // 设置当前加载的纹理 // loader.setMaterials(material)</span><br><span class="line">      loader.load(</span><br><span class="line">        &quot;/modules/uploads_files_2792345_Koenigsegg.obj&quot;,</span><br><span class="line">        (loadedMesh) =&gt; &#123;</span><br><span class="line">          // 创建材质 覆写材质可改变颜色</span><br><span class="line">          /* const material = new Three.MeshStandardMaterial(&#123;</span><br><span class="line">          color: &#x27;#F3F3F3&#x27;,</span><br><span class="line">          metalness: 0.4,</span><br><span class="line">          roughness: 0.1</span><br><span class="line">        &#125;)</span><br><span class="line">        // 给几何体成员赋该材质</span><br><span class="line">        loadedMesh.children.forEach(child =&gt; &#123;</span><br><span class="line">          child.material = material</span><br><span class="line">          child.geometry.computeFaceNormals()</span><br><span class="line">          child.geometry.computeVertexNormals()</span><br><span class="line">        &#125;) */</span><br><span class="line">          mesh = loadedMesh; // 添加到场景</span><br><span class="line">          scene.add(mesh);</span><br><span class="line">        &#125;,</span><br><span class="line">        (xhr) =&gt; &#123;</span><br><span class="line">          // 加载进度</span><br><span class="line">          if (xhr.lengthComputable) &#123;</span><br><span class="line">            const percentComplete = (xhr.loaded / xhr.total) * 100;</span><br><span class="line">            console.log(Math.round(percentComplete, 2) + &quot;%&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ); //   &#125;) // 地板</span><br><span class="line">      plane = new Three.Mesh(</span><br><span class="line">        new Three.PlaneBufferGeometry(2000, 2000),</span><br><span class="line">        new Three.MeshPhongMaterial(&#123; color: 0xffffff, depthWrite: false &#125;)</span><br><span class="line">      );</span><br><span class="line">      plane.rotation.x = -Math.PI / 2;</span><br><span class="line">      plane.receiveShadow = true;</span><br><span class="line">      scene.add(plane);</span><br><span class="line">    &#125;; // 加载dae模型</span><br><span class="line">    const loadDAE = () =&gt; &#123;</span><br><span class="line">      const loader = new ColladaLoader();</span><br><span class="line">      loader.load(</span><br><span class="line">        &quot;/model/dae/file.dae&quot;,</span><br><span class="line">        function (result) &#123;</span><br><span class="line">          meshDAE = result.scene.children[0].clone();</span><br><span class="line">          scene.add(meshDAE);</span><br><span class="line">        &#125;,</span><br><span class="line">        (xhr) =&gt; &#123;</span><br><span class="line">          // 加载进度</span><br><span class="line">          if (xhr.lengthComputable) &#123;</span><br><span class="line">            const percentComplete = (xhr.loaded / xhr.total) * 100;</span><br><span class="line">            console.log(Math.round(percentComplete, 2) + &quot;%--DEA&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &#125;; // 初始化dat.GUI简化试验流程</span><br><span class="line">    const initGui = () =&gt; &#123;</span><br><span class="line">      // 声明一个保存需求修改的相关数据的对象</span><br><span class="line">      gui = &#123;&#125;;</span><br><span class="line">      const datGui = new GUI();</span><br><span class="line">      console.log(datGui, gui); // 将设置属性添加到gui当中，gui.add(对象，属性，最小值，最大值）</span><br><span class="line">    &#125;; // 创建光源</span><br><span class="line">    const createLight = () =&gt; &#123;</span><br><span class="line">      // 环境光</span><br><span class="line">      const ambientLight = new Three.AmbientLight(0xffffff, 0.3); // 创建环境光</span><br><span class="line">      scene.add(ambientLight); // 将环境光添加到场景</span><br><span class="line">      const spotLight = new Three.SpotLight(&quot;#ffffff&quot;, 0.7); // 创建聚光灯</span><br><span class="line">      spotLight.position.set(1600, 1660, 100);</span><br><span class="line">      spotLight.castShadow = true;</span><br><span class="line">      scene.add(spotLight);</span><br><span class="line">    &#125;; // 创建相机</span><br><span class="line">    const createCamera = () =&gt; &#123;</span><br><span class="line">      const width = window.innerWidth; // 窗口宽度</span><br><span class="line">      const height = window.innerHeight; // 窗口高度</span><br><span class="line">      const k = width / height; // 窗口宽高比</span><br><span class="line">      camera = new Three.PerspectiveCamera(75, k, 0.1, 1000);</span><br><span class="line">      camera.position.set(400, 400, 100);</span><br><span class="line">      camera.lookAt(scene.position);</span><br><span class="line">      scene.add(camera);</span><br><span class="line">    &#125;; // 创建渲染器</span><br><span class="line">    const createRender = () =&gt; &#123;</span><br><span class="line">      renderer = new Three.WebGLRenderer(&#123; antialias: true, alpha: true &#125;);</span><br><span class="line">      renderer.setSize(window.innerWidth, window.innerHeight);</span><br><span class="line">      renderer.shadowMap.enabled = true; // 显示阴影</span><br><span class="line">      renderer.shadowMap.type = Three.PCFSoftShadowMap;</span><br><span class="line">      renderer.setClearColor(&quot;#000000&quot;); // 设置背景颜色</span><br><span class="line">      document.body.appendChild(renderer.domElement);</span><br><span class="line">    &#125;;</span><br><span class="line">    const render = () =&gt; &#123;</span><br><span class="line">      // if (mesh) &#123;</span><br><span class="line">      //   mesh.rotation.y += 0.005</span><br><span class="line">      // &#125;</span><br><span class="line">      renderer.render(scene, camera);</span><br><span class="line">      requestAnimationFrame(render);</span><br><span class="line">    &#125;; // 创建控件对象</span><br><span class="line">    const createControls = () =&gt; &#123;</span><br><span class="line">      // eslint-disable-next-line no-new</span><br><span class="line">      new OrbitControls(camera, renderer.domElement);</span><br><span class="line">    &#125;; // 窗口自适应</span><br><span class="line">    const resize = () =&gt; &#123;</span><br><span class="line">      window.addEventListener(&quot;resize&quot;, () =&gt; &#123;</span><br><span class="line">        // 初始化摄像机</span><br><span class="line">        camera &amp;&amp; (camera.aspect = window.innerWidth / window.innerHeight);</span><br><span class="line">        camera &amp;&amp; camera.updateProjectionMatrix(); // 初始化渲染器尺寸</span><br><span class="line">        renderer &amp;&amp; renderer.setSize(window.innerWidth, window.innerHeight);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;; // 初始化</span><br><span class="line">    const init = () =&gt; &#123;</span><br><span class="line">      createScene(); // 创建场景 //   initGui() // 试验流程</span><br><span class="line">      loadOBJ(); // 加载OBJ模型 //   loadDAE() // 加载DAE模型</span><br><span class="line">      createCamera(); // 创建相机</span><br><span class="line">      createLight(); // 创建光源</span><br><span class="line">      createRender(); // 创建渲染器</span><br><span class="line">      createControls(); // 创建控件对象</span><br><span class="line">      render(); // 渲染</span><br><span class="line">      resize(); // 自适应</span><br><span class="line">    &#125;;</span><br><span class="line">    init();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="vue-加载-GTL-模型"><a href="#vue-加载-GTL-模型" class="headerlink" title="vue 加载 GTL 模型"></a>vue 加载 GTL 模型</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import * as Three from &quot;three&quot;;</span><br><span class="line">import &#123; OrbitControls &#125; from &quot;three/examples/jsm/controls/OrbitControls.js&quot;;</span><br><span class="line">import &#123; GLTFLoader &#125; from &quot;three/examples/jsm/loaders/GLTFLoader.js&quot;;</span><br><span class="line">import &#123; ColladaLoader &#125; from &quot;three/examples/jsm/loaders/ColladaLoader&quot;;</span><br><span class="line">import &#123; DRACOLoader &#125; from &quot;three/examples/jsm/loaders/DRACOLoader.js&quot;;</span><br><span class="line">import &#123; RoomEnvironment &#125; from &quot;three/examples/jsm/environments/RoomEnvironment.js&quot;;</span><br><span class="line">import Stats from &quot;three/examples/jsm/libs/stats.module&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    let plane;</span><br><span class="line">    let camera;</span><br><span class="line">    let scene;</span><br><span class="line">    let renderer;</span><br><span class="line">    let clock;</span><br><span class="line">    let mixer;</span><br><span class="line">    let controls;</span><br><span class="line">    let stats; // 创建场景</span><br><span class="line">    const createScene = () =&gt; &#123;</span><br><span class="line">      scene = new Three.Scene();</span><br><span class="line">      scene.background = new Three.Color(0xbfe3dd);</span><br><span class="line">      const pmremGenerator = new Three.PMREMGenerator(renderer);</span><br><span class="line">      scene.environment = pmremGenerator.fromScene(</span><br><span class="line">        new RoomEnvironment(),</span><br><span class="line">        0.04</span><br><span class="line">      ).texture;</span><br><span class="line">      clock = new Three.Clock();</span><br><span class="line">      stats = new Stats();</span><br><span class="line">    &#125;; // 加载GTL模型</span><br><span class="line">    const loadGTL = () =&gt; &#123;</span><br><span class="line">      const dracoLoader = new DRACOLoader();</span><br><span class="line">      dracoLoader.setDecoderPath(&quot;/js/gltf/&quot;);</span><br><span class="line">      const loader = new GLTFLoader();</span><br><span class="line">      loader.setDRACOLoader(dracoLoader);</span><br><span class="line">      loader.load(</span><br><span class="line">        &quot;/modules/LittlestTokyo.glb&quot;,</span><br><span class="line">        function (gltf) &#123;</span><br><span class="line">          const model = gltf.scene;</span><br><span class="line">          model.position.set(1, 1, 0);</span><br><span class="line">          model.scale.set(0.01, 0.01, 0.01);</span><br><span class="line">          scene.add(model);</span><br><span class="line">          mixer = new Three.AnimationMixer(model);</span><br><span class="line">          mixer.clipAction(gltf.animations[0]).play();</span><br><span class="line">          render();</span><br><span class="line">        &#125;,</span><br><span class="line">        undefined,</span><br><span class="line">        function (error) &#123;</span><br><span class="line">          console.error(error);</span><br><span class="line">        &#125;</span><br><span class="line">      ); // 地板</span><br><span class="line">      plane = new Three.Mesh(</span><br><span class="line">        new Three.PlaneBufferGeometry(500, 400),</span><br><span class="line">        new Three.MeshPhongMaterial(&#123; color: 0xa08c66, depthWrite: false &#125;)</span><br><span class="line">      );</span><br><span class="line">      plane.rotation.x = -Math.PI / 2;</span><br><span class="line">      plane.receiveShadow = true;</span><br><span class="line">      scene.add(plane);</span><br><span class="line">    &#125;; // 创建光源</span><br><span class="line">    const createLight = () =&gt; &#123;</span><br><span class="line">      // 环境光</span><br><span class="line">      const ambientLight = new Three.AmbientLight(0xffffff, 0.3); // 创建环境光</span><br><span class="line">      scene.add(ambientLight); // 将环境光添加到场景</span><br><span class="line">      const spotLight = new Three.SpotLight(&quot;#ffffff&quot;, 0.7); // 创建聚光灯</span><br><span class="line">      spotLight.position.set(1600, 1660, 100);</span><br><span class="line">      spotLight.castShadow = true;</span><br><span class="line">      scene.add(spotLight);</span><br><span class="line">    &#125;; // 创建相机</span><br><span class="line">    const createCamera = () =&gt; &#123;</span><br><span class="line">      const width = window.innerWidth; // 窗口宽度</span><br><span class="line">      const height = window.innerHeight; // 窗口高度</span><br><span class="line">      const k = width / height; // 窗口宽高比</span><br><span class="line">      camera = new Three.PerspectiveCamera(40, k, 1, 100);</span><br><span class="line">      camera.position.set(5, 2, 8);</span><br><span class="line">      camera.lookAt(scene.position);</span><br><span class="line">      scene.add(camera);</span><br><span class="line">    &#125;; // 创建渲染器</span><br><span class="line">    const createRender = () =&gt; &#123;</span><br><span class="line">      renderer = new Three.WebGLRenderer(&#123; antialias: true, alpha: true &#125;);</span><br><span class="line">      renderer.setSize(window.innerWidth, window.innerHeight - 84);</span><br><span class="line">      renderer.shadowMap.enabled = true; // 显示阴影</span><br><span class="line">      renderer.shadowMap.type = Three.PCFSoftShadowMap;</span><br><span class="line">      renderer.setClearColor(&quot;#000000&quot;); // 设置背景颜色</span><br><span class="line">      document.body.appendChild(renderer.domElement);</span><br><span class="line">    &#125;;</span><br><span class="line">    const render = () =&gt; &#123;</span><br><span class="line">      const delta = clock.getDelta();</span><br><span class="line">      mixer.update(delta);</span><br><span class="line">      controls &amp;&amp; controls.update();</span><br><span class="line">      stats.update();</span><br><span class="line">      renderer &amp;&amp; renderer.render(scene, camera);</span><br><span class="line">      requestAnimationFrame(render);</span><br><span class="line">    &#125;; // 创建控件对象</span><br><span class="line">    const createControls = () =&gt; &#123;</span><br><span class="line">      // eslint-disable-next-line no-new</span><br><span class="line">      controls = new OrbitControls(camera, renderer.domElement);</span><br><span class="line">      controls.target.set(0, 0.5, 0);</span><br><span class="line">      controls.update();</span><br><span class="line">      controls.enablePan = false;</span><br><span class="line">      controls.enableDamping = true;</span><br><span class="line">    &#125;; // 窗口自适应</span><br><span class="line">    const resize = () =&gt; &#123;</span><br><span class="line">      window.addEventListener(&quot;resize&quot;, () =&gt; &#123;</span><br><span class="line">        // 初始化摄像机</span><br><span class="line">        camera &amp;&amp; (camera.aspect = window.innerWidth / window.innerHeight);</span><br><span class="line">        camera &amp;&amp; camera.updateProjectionMatrix(); // 初始化渲染器尺寸</span><br><span class="line">        renderer &amp;&amp;</span><br><span class="line">          renderer.setSize(window.innerWidth, window.innerHeight - 84);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;; // 初始化</span><br><span class="line">    const init = () =&gt; &#123;</span><br><span class="line">      createRender(); // 创建渲染器</span><br><span class="line">      createScene(); // 创建场景</span><br><span class="line">      loadGTL(); // 加载GTL模型</span><br><span class="line">      createCamera(); // 创建相机</span><br><span class="line">      createLight(); // 创建光源</span><br><span class="line">      createControls(); // 创建控件对象</span><br><span class="line">      resize(); // 自适应</span><br><span class="line">    &#125;;</span><br><span class="line">    init();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="模型交互"><a href="#模型交互" class="headerlink" title="模型交互"></a>模型交互</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户交互</span></span><br><span class="line"><span class="keyword">let</span> selectObject = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  event.preventDefault();</span><br><span class="line">  <span class="keyword">if</span> (event.button != <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">const</span> mouse = <span class="keyword">new</span> Three.Vector3();</span><br><span class="line">  mouse.x = (event.clientX / <span class="built_in">window</span>.innerWidth) * <span class="number">2</span> - <span class="number">1</span>;</span><br><span class="line">  mouse.y = -(event.clientY / <span class="built_in">window</span>.innerHeight) * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;mouse: &quot;</span>, mouse);</span><br><span class="line">  <span class="keyword">const</span> raycaster = <span class="keyword">new</span> Three.Raycaster();</span><br><span class="line">  raycaster.setFromCamera(mouse, camera);</span><br><span class="line">  <span class="keyword">const</span> intersected = raycaster.intersectObjects(scene.children, <span class="literal">false</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(intersected);</span><br><span class="line">  <span class="keyword">if</span> (intersected.length) &#123;</span><br><span class="line">    <span class="keyword">const</span> found = intersected[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">const</span> faceIndex = found.faceIndex;</span><br><span class="line">    <span class="keyword">const</span> geometry = found.object.geometry;</span><br><span class="line">    found.object.material.color.set(<span class="number">0xff0000</span>);</span><br><span class="line">    <span class="keyword">const</span> modelID = found.object.modelID;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">window</span>.onpointerdown = selectObject;</span><br></pre></td></tr></table></figure><h4 id="场景销毁"><a href="#场景销毁" class="headerlink" title="场景销毁"></a>场景销毁</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 销毁</span></span><br><span class="line"><span class="keyword">const</span> removeCube = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> allChildren = scene.children;</span><br><span class="line">  <span class="keyword">if</span> (allChildren.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    renderer.setSize(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    allChildren.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      scene.remove(item);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  scene.traverse(<span class="function">(<span class="params">child</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (child.material) &#123;</span><br><span class="line">      child.material.dispose();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (child.geometry) &#123;</span><br><span class="line">      child.geometry.dispose();</span><br><span class="line">    &#125;</span><br><span class="line">    child = <span class="literal">null</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  renderer.forceContextLoss();</span><br><span class="line">  renderer.dispose();</span><br><span class="line">  scene.clear();</span><br><span class="line">  scene = <span class="literal">null</span>;</span><br><span class="line">  camera = <span class="literal">null</span>;</span><br><span class="line">  controls = <span class="literal">null</span>;</span><br><span class="line">  renderer.domElement = <span class="literal">null</span>;</span><br><span class="line">  renderer = <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3.0 </tag>
            
            <tag> threejs </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
